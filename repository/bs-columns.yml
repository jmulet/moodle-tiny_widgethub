key: bs-columns
name: Responsive columns
category: bootstrap
instructions: > 
  Adds a responsive two columns layout
engine: ejs
template: |
  <p><br></p>
  <div class="container">
    <div class="row">
      <div class="col-sm-<%=w1%>">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</p>
      </div>
      <div class="col-sm-<%=12-w1%>">
        <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus.</p>
      </div>
    </div>
  </div>
  <p><br></p>
selectors: div.container
unbind: div.row div > *
parameters:
  - name: w1
    title: Width of the first column
    tip: The remaining space is assigned to the second column
    options:
      - {l: '8%',  v: 1}
      - {l: '16%', v: 2}
      - {l: '25%', v: 3}
      - {l: '33%', v: 4}
      - {l: '42%', v: 5}
      - {l: '50%', v: 6}
      - {l: '58%', v: 7}
      - {l: '66%', v: 8}
      - {l: '75%', v: 9}
      - {l: '83%', v: 10}
      - {l: '92%', v: 11}
    bind:
      - get: |
          (e) => {
            var className = e.find('div.row > div').first().attr('class');
            var match = new RegExp(/col-sm-(\d+)/).exec(className) || [];
            return parseInt(match[1] || '6');
          }
      - set: |
          (e, v) => {
            var col1 = e.find('div.row > div').first();
            var col2 = col1.next();
            var regex = new RegExp(/col-sm-(\d+)/g);
            var cb = function(i, cn) { 
              return cn.split(/\s+/).filter(function(c) {
                return regex.test(c);
              }).join(' ');
            };
            col1.removeClass(cb);
            col2.removeClass(cb);
            col1.addClass('col-sm-' + v);
            col2.addClass('col-sm-' + (12-v));
          }
author: Josep Mulet <pep.mulet@gmail.com>
version: 1.0.0
