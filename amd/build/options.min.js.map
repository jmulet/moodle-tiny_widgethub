{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport Common from './common';\nimport {WidgetWrapper} from './util';\nconst pluginName = Common.pluginName;\n\nconst showPlugin = getPluginOptionName(pluginName, 'showplugin');\nconst userId = getPluginOptionName(pluginName, 'userid');\nconst courseId = getPluginOptionName(pluginName, 'courseid');\nconst widgetList = getPluginOptionName(pluginName, 'widgetlist');\n\nconst shareStyles = getPluginOptionName(pluginName, 'sharestyles');\nconst additionalCss = getPluginOptionName(pluginName, 'additionalcss');\nconst addValidElements = getPluginOptionName(pluginName, 'addvalidelements');\nconst addCustomElements = getPluginOptionName(pluginName, 'addcustomelements');\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n */\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    registerOption(showPlugin, {\n        processor: 'boolean',\n        \"default\": true,\n    });\n\n    registerOption(userId, {\n        processor: 'string',\n        \"default\": \"-1\",\n    });\n\n    registerOption(courseId, {\n        processor: 'string',\n        \"default\": \"-1\",\n    });\n\n    registerOption(widgetList, {\n        processor: 'array',\n        \"default\": [],\n    });\n\n    registerOption(shareStyles, {\n        processor: 'boolean',\n        \"default\": true,\n    });\n\n    registerOption(additionalCss, {\n        processor: 'string',\n        \"default\": \"\",\n    });\n\n    registerOption(addValidElements, {\n        processor: 'string',\n        \"default\": \"\",\n    });\n\n    registerOption(addCustomElements, {\n        processor: 'string',\n        \"default\": \"\",\n    });\n\n};\n\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @returns {boolean} - are the plugin buttons visible?\n */\nexport const isPluginVisible = (editor) => editor.options.get(showPlugin);\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @returns {number} - an integer with the id of the current user\n */\nexport const getUserId = (editor) => parseInt(editor.options.get(userId));\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @returns {number} - an integer with the id of the current course\n */\nexport const getCourseId = (editor) => parseInt(editor.options.get(courseId));\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @returns {string} - additional css that must be included in a <style> tag in editor's iframe\n */\nexport const getAdditionalCss = (editor) => editor.options.get(additionalCss);\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @returns {string}\n */\nexport const getAddValidElements = (editor) => editor.options.get(addValidElements);\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @returns {string}\n */\nexport const getAddCustomElements = (editor) => editor.options.get(addCustomElements);\n\n/** @type {Object.<string, WidgetWrapper> | null} */\nlet widgetDict = null;\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @returns {Object.<string,WidgetWrapper>} - a dictionary of \"usable\" widgets for the current userId\n */\nexport const getWidgetDict = (editor) => {\n    if (!widgetDict) {\n        widgetDict = {};\n        // The widgetList is of type object[]\n        // partials is a special widget that is used to define common parameters shared by other widgets\n        /** @type {import('./util').Widget[]} */\n        let widgets = editor.options.get(widgetList);\n        let partials = widgets.filter(e => e.key === 'partials')[0];\n        if (partials) {\n            widgets = widgets.filter(e => e.key !== 'partials');\n        }\n        // Create a wrapper for the widget to handle operations\n        const wrappedWidgets = widgets\n            .map(w => new WidgetWrapper(w, partials || {}));\n        // Remove those buttons that aren't usable for the current user\n        const userId = getUserId(editor);\n        wrappedWidgets.filter(w => w.isFor(userId)).forEach(w => {\n            if (widgetDict) {\n                widgetDict[w.key] = w;\n            }\n        });\n    }\n    return widgetDict;\n};"],"names":["pluginName","showPlugin","userId","courseId","widgetList","shareStyles","additionalCss","addValidElements","addCustomElements","editor","registerOption","options","register","processor","get","getUserId","parseInt","widgetDict","widgets","partials","filter","e","key","wrappedWidgets","map","w","WidgetWrapper","isFor","forEach"],"mappings":";;;;;;;yQA0BMA,6EAAoBA,WAEpBC,YAAa,gCAAoBD,WAAY,cAC7CE,QAAS,gCAAoBF,WAAY,UACzCG,UAAW,gCAAoBH,WAAY,YAC3CI,YAAa,gCAAoBJ,WAAY,cAE7CK,aAAc,gCAAoBL,WAAY,eAC9CM,eAAgB,gCAAoBN,WAAY,iBAChDO,kBAAmB,gCAAoBP,WAAY,oBACnDQ,mBAAoB,gCAAoBR,WAAY,uCAKjCS,eACfC,eAAiBD,OAAOE,QAAQC,SAEtCF,eAAeT,WAAY,CACvBY,UAAW,mBACA,IAGfH,eAAeR,OAAQ,CACnBW,UAAW,iBACA,OAGfH,eAAeP,SAAU,CACrBU,UAAW,iBACA,OAGfH,eAAeN,WAAY,CACvBS,UAAW,gBACA,KAGfH,eAAeL,YAAa,CACxBQ,UAAW,mBACA,IAGfH,eAAeJ,cAAe,CAC1BO,UAAW,iBACA,KAGfH,eAAeH,iBAAkB,CAC7BM,UAAW,iBACA,KAGfH,eAAeF,kBAAmB,CAC9BK,UAAW,iBACA,+BAUaJ,QAAWA,OAAOE,QAAQG,IAAIb,kBAMjDc,UAAaN,QAAWO,SAASP,OAAOE,QAAQG,IAAIZ,2DAMrCO,QAAWO,SAASP,OAAOE,QAAQG,IAAIX,qCAMlCM,QAAWA,OAAOE,QAAQG,IAAIR,4CAM3BG,QAAWA,OAAOE,QAAQG,IAAIP,gDAM7BE,QAAWA,OAAOE,QAAQG,IAAIN,uBAG/DS,WAAa,4BAMaR,aACrBQ,WAAY,CACbA,WAAa,OAITC,QAAUT,OAAOE,QAAQG,IAAIV,YAC7Be,SAAWD,QAAQE,QAAOC,GAAe,aAAVA,EAAEC,MAAoB,GACrDH,WACAD,QAAUA,QAAQE,QAAOC,GAAe,aAAVA,EAAEC,aAG9BC,eAAiBL,QAClBM,KAAIC,GAAK,IAAIC,oBAAcD,EAAGN,UAAY,MAEzCjB,OAASa,UAAUN,QACzBc,eAAeH,QAAOK,GAAKA,EAAEE,MAAMzB,UAAS0B,SAAQH,IAC5CR,aACAA,WAAWQ,EAAEH,KAAOG,aAIzBR"}