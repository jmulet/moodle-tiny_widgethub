define("tiny_widgethub/container",["exports","./controller/widgetParamsCtrl","./controller/widgetPickerCtrl","./controller/formCtrl","./service/modalSrv","core/mustache","./service/templateSrv","./service/userStorageSrv","jquery","editor_tiny/utils","editor_tiny/options","./controller/widgetPropertiesCtrl","./options","./contextInit"],(function(_exports,_widgetParamsCtrl,_widgetPickerCtrl,_formCtrl,_modalSrv,_mustache,_templateSrv,_userStorageSrv,_jquery,_utils,_options,_widgetPropertiesCtrl,_options2,_contextInit){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.ejsLoader=_exports.FileSrv=_exports.DIContainer=void 0,_mustache=_interopRequireDefault(_mustache),_jquery=_interopRequireDefault(_jquery),_widgetPropertiesCtrl=_interopRequireDefault(_widgetPropertiesCtrl);class FileSrv{constructor(editor){this.editor=editor}getImagePicker(){return(0,_options.getFilePicker)(this.editor,"image")}displayImagePicker(){return(0,_utils.displayFilepicker)(this.editor,"image")}}let _ejs;_exports.FileSrv=FileSrv;const ejsLoader=()=>_ejs?Promise.resolve(_ejs):new Promise(((resolve,reject)=>{window.require(["tiny_widgethub/ejs-lazy"],(ejsModule=>{_ejs=ejsModule,_ejs?resolve(_ejs):reject()}),reject)}));function isClass(obj){var _obj$constructor,_obj$constructor$toSt,_obj$prototype,_obj$prototype$constr,_obj$prototype$constr2;const isCtorClass="class"===(null===(_obj$constructor=obj.constructor)||void 0===_obj$constructor||null===(_obj$constructor$toSt=_obj$constructor.toString())||void 0===_obj$constructor$toSt?void 0:_obj$constructor$toSt.substring(0,5));if(void 0===obj.prototype)return isCtorClass;const isPrototypeCtorClass="class"===(null===(_obj$prototype=obj.prototype)||void 0===_obj$prototype||null===(_obj$prototype$constr=_obj$prototype.constructor)||void 0===_obj$prototype$constr||null===(_obj$prototype$constr2=_obj$prototype$constr.toString())||void 0===_obj$prototype$constr2?void 0:_obj$prototype$constr2.substring(0,5));return isCtorClass||isPrototypeCtorClass}_exports.ejsLoader=ejsLoader;class DIContainer{static#registry=new Map;static#singletonInstances=new Map;#serviceInstances=new Map;static#parseDeps(dependencies){return null!=dependencies&&dependencies.trim()?dependencies.split(",").map((e=>e.trim())):[]}static registerSingleton(name,obj,dependencies){this.#registry.set(name,{name:name,type:"singleton",obj:obj,deps:DIContainer.#parseDeps(dependencies)})}static registerService(name,obj,dependencies){this.#registry.set(name,{name:name,type:"service",obj:obj,deps:DIContainer.#parseDeps(dependencies)})}static registerFactory(name,obj,dependencies){this.#registry.set(name,{name:name,type:"factory",obj:obj,deps:DIContainer.#parseDeps(dependencies)})}registerInstance(name,obj){this.#serviceInstances.set(name,obj)}get(name){if(name.indexOf(",")>0)return name.split(",").map((e=>this.get(e.trim())));if(this.#serviceInstances.has(name))return this.#serviceInstances.get(name);const reg=DIContainer.#registry.get(name);if(!reg)throw new Error(`Cannot find a registry for dependency ${name}`);switch(reg.type){case"singleton":return this.#getInstance(DIContainer.#singletonInstances,reg);case"service":return this.#getInstance(this.#serviceInstances,reg);case"factory":{const deps=(reg.deps??[]).map((name=>this.get(name)));if(isClass(reg.obj))return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return new reg.obj(...deps,...args)};if("function"==typeof reg.obj)return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return reg.obj(...deps,...args)}}}throw new Error(`Invalid registry type ${reg.type}`)}#getInstance(map,reg){if(map.has(reg.name))return map.get(reg.name);const instance=this.#createInstance(reg);return map.set(reg.name,instance),instance}#createInstance(reg){const deps=(reg.deps??[]).map((name=>this.get(name)));return isClass(reg.obj)?new reg.obj(...deps):"function"==typeof reg.obj&&deps.length?reg.obj(...deps):reg.obj}}_exports.DIContainer=DIContainer,DIContainer.registerSingleton("jQuery",_jquery.default),DIContainer.registerService("editorOptions",_options2.EditorOptions,"editor"),DIContainer.registerFactory("widgetParamsFactory",_widgetParamsCtrl.WidgetParamsCtrl,"editor, userStorage, templateSrv, modalSrv, formCtrl"),DIContainer.registerService("widgetPickCtrl",_widgetPickerCtrl.WidgetPickerCtrl,"editor, editorOptions, widgetParamsFactory, modalSrv, templateSrv, userStorage"),DIContainer.registerService("widgetPropertiesCtrl",_widgetPropertiesCtrl.default,"editor, formCtrl, modalSrv"),DIContainer.registerService("formCtrl",_formCtrl.FormCtrl,"editor, userStorage, templateSrv, fileSrv, jQuery"),DIContainer.registerSingleton("modalSrv",_modalSrv.ModalSrv),DIContainer.registerSingleton("mustache",_mustache.default),DIContainer.registerSingleton("ejsLoader",ejsLoader),DIContainer.registerSingleton("templateSrv",_templateSrv.TemplateSrv,"mustache, ejsLoader"),DIContainer.registerSingleton("iStorage",{localStorage:localStorage,sessionStorage:sessionStorage}),DIContainer.registerSingleton("userStorage",_userStorageSrv.UserStorageSrv,"editorOptions, iStorage"),DIContainer.registerService("fileSrv",FileSrv,"editor"),DIContainer.registerFactory("initContextActions",_contextInit.initContextActions,"editor, editorOptions, widgetPropertiesCtrl, jQuery")}));

//# sourceMappingURL=container.min.js.map