{"version":3,"file":"commands.min.js","sources":["../../src/src/commands.js"],"sourcesContent":["/* eslint-disable no-console */\n\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport * as coreStr from 'core/str';\nimport Common from './common';\nimport * as cfg from 'core/config';\nimport {initContextActions} from './contextInit';\nimport {getAdditionalCss, getGlobalConfig, isPluginVisible, Shared} from './options';\nimport jQuery from \"jquery\";\nimport {getWidgetPickCtrl} from './controller/widgetPickerCtrl';\nimport {getListeners} from './extension';\nimport {getUserStorage} from './service/userStorageSrv';\nimport {getEditorOptions} from './options';\nimport {applyWidgetFilterFactory} from './util';\n\nexport const getSetup = async() => {\n    // Get some translations\n    const [widgetNameTitle, buttonImage] = await Promise.all([\n        // @ts-ignore\n        coreStr.getString('settings', Common.component),\n        getButtonImage('icon', Common.component),\n    ]);\n\n    /** @param {import('./plugin').TinyMCE} editor */\n    return (editor) => {\n        // Check if the option visible is set.\n        if (!isPluginVisible(editor)) {\n            // No capabilities required.\n            return;\n        }\n        // Check if there is a config option to disable the plugin for the current page.\n        /** @type {string[]} */\n        const disableOnPages = getGlobalConfig(editor, \"disable.plugin.pages\", \"\").split(\",\");\n        if (disableOnPages.includes(Shared.currentScope)) {\n            console.warn('WidgetHub plugin is disabled on this page.');\n            return;\n        }\n\n        // Register the Icon.\n        editor.ui.registry.addIcon(Common.icon, buttonImage.html);\n\n        const defaultAction = () => {\n            const widgetPickCtrl = getWidgetPickCtrl(editor);\n            widgetPickCtrl.handleAction();\n        };\n\n        // Register the Toolbar Button.\n        editor.ui.registry.addButton(Common.component, {\n            icon: Common.icon,\n            tooltip: widgetNameTitle,\n            onAction: defaultAction,\n        });\n\n        // Add the Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(Common.component, {\n            icon: Common.icon,\n            text: widgetNameTitle,\n            onAction: defaultAction,\n        });\n\n        // Initialize context menus, styles and scripts into editor's iframe\n        initializer(editor);\n    };\n};\n\n/**\n * If the user has selected automatic apply of filters on startup, apply them!\n * @param {import('./plugin').TinyMCE} editor\n */\nconst autoFilter = (editor) => {\n    const storage = getUserStorage(editor);\n    const requiresFilter = storage.getFromLocal(\"startup.filters\", \"\").split(\",\");\n\n    if (requiresFilter.length > 0) {\n        const editorOptions = getEditorOptions(editor);\n        const widgetsFound = requiresFilter.map(key => editorOptions.widgetDict[key]).filter(w => w !== undefined);\n        const applyWidgetFilter = applyWidgetFilterFactory(editor, coreStr);\n\n        // Apply the filters and show the result\n        widgetsFound.forEach(w => applyWidgetFilter(w.template ?? '', true));\n\n        // Apply it also on save\n        const pageForm = document.querySelector('form.mform');\n        if (pageForm && pageForm.querySelector('div[data-fieldtype=\"editor\"]')) {\n            pageForm.addEventListener('submit', () => {\n                widgetsFound.forEach(w => applyWidgetFilter(w.template ?? '', true));\n                return true;\n            });\n        }\n    }\n};\n\n/**\n * Inject styles and scripts into editor's iframe\n * @param {import('./plugin').TinyMCE} editor\n */\nfunction initializer(editor) {\n    editor.once('SetContent', () => {\n        // Run all subscribers\n        autoFilter(editor);\n        getListeners('contentSet').forEach(listener => listener(editor));\n    });\n    // Add the bootstrap, CSS, etc... into the editor's iframe\n    editor.on('init', () => {\n        // On init editor.dom is ready\n        // Inject css all generated by Moodle into the editor's iframe\n        // http://localhost:4141/theme/styles.php/boost/1721728984_1/all\n        // TODO: Missing themesubrevision\n        const subversion = 1;\n        // @ts-ignore\n        const allCss = `${cfg.wwwroot}/theme/styles.php/${cfg.theme}/${cfg.themerev}_${subversion}/all`;\n        editor.dom.loadCSS(allCss);\n\n        // Inject styles and Javascript into the editor's iframe\n        // editor.dom.loadCSS(`${baseUrl}/libs/fontawesome/css/font-awesome.min.css`);\n        // Discover the jQuery version\n        // @ts-ignore\n        const jQueryVersion = jQuery.fn.jquery ?? '3.6.1';\n        const scriptJQ = editor.dom.create(\"script\", {src: `https://code.jquery.com/jquery-${jQueryVersion}.min.js`});\n        const head = editor.getDoc().querySelector(\"head\");\n        scriptJQ.onload = () => {\n            // Cannot load BS until JQ is fully loaded on editor's iframe\n            // @ts-ignore\n            const bsVersion = jQuery.fn.tooltip?.Constructor?.VERSION ?? '4.6.2';\n            const scriptBS = editor.dom.create(\"script\",\n                {src: `https://cdn.jsdelivr.net/npm/bootstrap@${bsVersion}/dist/js/bootstrap.bundle.min.js`});\n            head.appendChild(scriptBS);\n\n            // Activate popover and tooltips\n            scriptBS.onload = () => {\n                const scriptInitBS = editor.dom.create(\"script\");\n                scriptInitBS.innerHTML = `\n                $(document).ready(function() {\n                    $('body').tooltip({\n                        selector: '[data-toggle=\"tooltip\"]',\n                        trigger: 'hover'\n                    });\n                    $('body').popover({\n                        selector: '[data-toggle=\"popover\"]',\n                        trigger: 'hover'\n                    });\n                });`;\n                head.appendChild(scriptInitBS);\n            };\n            // Run all subscribers\n            getListeners('onInit').forEach(listener => listener(editor));\n\n            // Inject css from site Admin\n            let adminCss = (getAdditionalCss(editor) ?? '').trim();\n            if (adminCss) {\n                // Commented URLs are interpreted as loadCss\n                const regex = /\\/\\*{2}\\s+(http(s?):\\/\\/.*)\\s+\\*{2}\\//gm;\n                adminCss = adminCss.replace(regex, (_, $1) => {\n                    // console.log(\"Loading \", $1);\n                    editor.dom.loadCSS($1);\n                    return '';\n                });\n                if (adminCss.trim()) {\n                    editor.dom.addStyle(adminCss);\n                }\n            }\n\n            if (parseInt(getGlobalConfig(editor, 'enable.contextmenu.level', '1')) > 0) {\n                // Initialize context toolbars and menus\n                initContextActions(editor);\n            }\n        };\n\n        head.appendChild(scriptJQ);\n    });\n}\n\n"],"names":["async","widgetNameTitle","buttonImage","Promise","all","coreStr","getString","Common","component","editor","split","includes","Shared","currentScope","console","warn","ui","registry","addIcon","icon","html","defaultAction","handleAction","addButton","tooltip","onAction","addMenuItem","text","once","requiresFilter","getFromLocal","length","editorOptions","widgetsFound","map","key","widgetDict","filter","w","undefined","applyWidgetFilter","forEach","template","pageForm","document","querySelector","addEventListener","autoFilter","listener","on","subversion","allCss","cfg","wwwroot","theme","themerev","dom","loadCSS","jQueryVersion","jQuery","fn","jquery","scriptJQ","create","src","head","getDoc","onload","bsVersion","Constructor","VERSION","scriptBS","appendChild","scriptInitBS","innerHTML","adminCss","trim","regex","replace","_","$1","addStyle","parseInt","initializer"],"mappings":";;;;;;;kQAsCwBA,gBAEbC,gBAAiBC,mBAAqBC,QAAQC,IAAI,CAErDC,QAAQC,UAAU,WAAYC,gBAAOC,YACrC,yBAAe,OAAQD,gBAAOC,oBAI1BC,cAEC,4BAAgBA,mBAME,4BAAgBA,OAAQ,uBAAwB,IAAIC,MAAM,KAC9DC,SAASC,gBAAOC,0BAC/BC,QAAQC,KAAK,8CAKjBN,OAAOO,GAAGC,SAASC,QAAQX,gBAAOY,KAAMjB,YAAYkB,YAE9CC,cAAgB,MACK,uCAAkBZ,QAC1Ba,gBAInBb,OAAOO,GAAGC,SAASM,UAAUhB,gBAAOC,UAAW,CAC3CW,KAAMZ,gBAAOY,KACbK,QAASvB,gBACTwB,SAAUJ,gBAKdZ,OAAOO,GAAGC,SAASS,YAAYnB,gBAAOC,UAAW,CAC7CW,KAAMZ,gBAAOY,KACbQ,KAAM1B,gBACNwB,SAAUJ,yBAuCDZ,QACjBA,OAAOmB,KAAK,cAAc,KA5BVnB,CAAAA,eAEVoB,gBADU,kCAAepB,QACAqB,aAAa,kBAAmB,IAAIpB,MAAM,QAErEmB,eAAeE,OAAS,EAAG,OACrBC,eAAgB,6BAAiBvB,QACjCwB,aAAeJ,eAAeK,KAAIC,KAAOH,cAAcI,WAAWD,OAAME,QAAOC,QAAWC,IAAND,IACpFE,mBAAoB,kCAAyB/B,OAAQJ,SAG3D4B,aAAaQ,SAAQH,GAAKE,kBAAkBF,EAAEI,UAAY,IAAI,WAGxDC,SAAWC,SAASC,cAAc,cACpCF,UAAYA,SAASE,cAAc,iCACnCF,SAASG,iBAAiB,UAAU,KAChCb,aAAaQ,SAAQH,GAAKE,kBAAkBF,EAAEI,UAAY,IAAI,MACvD,OAafK,CAAWtC,oCACE,cAAcgC,SAAQO,UAAYA,SAASvC,aAG5DA,OAAOwC,GAAG,QAAQ,WAKRC,WAAa,EAEbC,OAAU,GAAEC,IAAIC,4BAA4BD,IAAIE,SAASF,IAAIG,YAAYL,iBAC/EzC,OAAO+C,IAAIC,QAAQN,cAMbO,cAAgBC,gBAAOC,GAAGC,QAAU,QACpCC,SAAWrD,OAAO+C,IAAIO,OAAO,SAAU,CAACC,IAAM,kCAAiCN,yBAC/EO,KAAOxD,OAAOyD,SAASrB,cAAc,QAC3CiB,SAASK,OAAS,wDAGRC,sDAAmBR,GAAGpC,wFAAS6C,0EAAaC,UAAW,QACvDC,SAAW9D,OAAO+C,IAAIO,OAAO,SAC/B,CAACC,IAAM,0CAAyCI,8CACpDH,KAAKO,YAAYD,UAGjBA,SAASJ,OAAS,WACRM,aAAehE,OAAO+C,IAAIO,OAAO,UACvCU,aAAaC,UAAa,gaAW1BT,KAAKO,YAAYC,2CAGR,UAAUhC,SAAQO,UAAYA,SAASvC,cAGhDkE,WAAY,6BAAiBlE,SAAW,IAAImE,UAC5CD,SAAU,OAEJE,MAAQ,0CACdF,SAAWA,SAASG,QAAQD,OAAO,CAACE,EAAGC,MAEnCvE,OAAO+C,IAAIC,QAAQuB,IACZ,MAEPL,SAASC,QACTnE,OAAO+C,IAAIyB,SAASN,UAIxBO,UAAS,4BAAgBzE,OAAQ,2BAA4B,MAAQ,uCAElDA,SAI3BwD,KAAKO,YAAYV,aA3GjBqB,CAAY1E"}