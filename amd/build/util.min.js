define("tiny_widgethub/util",["exports"],(function(_exports){function evalInContext(ctx,expr,keepFns){const listArgs=[],listVals=[];ctx&&Object.keys(ctx).forEach((key=>{(keepFns||"function"!=typeof ctx[key])&&(listArgs.push(key),listVals.push(ctx[key]))})),listArgs.push("expr"),listArgs.push("return eval(expr)"),listVals.push(expr);return new Function(...listArgs)(...listVals)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.addBaseToUrl=function(base,url){if((url=(url||"").trim()).toLowerCase().startsWith("http"))return url;return pathJoin(base,url)},_exports.addScript=function(url,id,onSuccess,onError){if(id&&null!=document.head.querySelector("script#"+id))return;const newScript=document.createElement("script");newScript.type="text/javascript",newScript.src=url,id&&newScript.setAttribute("id",id);newScript.onload=()=>{onSuccess&&onSuccess()},newScript.onerror=function(){console.error("Error loading ",url),onError&&onError()},document.head.append(newScript)},_exports.applyWidgetFilterFactory=function(editor,coreStr){return async(widgetTemplate,silent,mergevars)=>{const translations=await coreStr.get_strings([{key:"filterres",component:"tiny_widgethub"},{key:"nochanges",component:"tiny_widgethub"}]),userWidgetFilter=createFilterFunction(widgetTemplate);if(!userWidgetFilter)return editor.notificationManager.open({text:translations[0]+": Invalid filter",type:"danger",timeout:4e3}),!1;const handleFilterResult=function(res){const out=res[0];let msg=res[1];null!=out?"string"==typeof out?(editor.setContent(out),editor.notificationManager.open({text:translations[0]+": "+msg,type:"success",timeout:5e3})):!0===out?editor.notificationManager.open({text:translations[0]+": "+msg,type:"success",timeout:5e3}):!1!==out||silent||editor.notificationManager.open({text:translations[1],type:"info",timeout:4e3}):silent||editor.notificationManager.open({text:translations[1],type:"info",timeout:4e3})},filteredResult=userWidgetFilter(editor.getContent(),editor.dom.window,mergevars);return null!=filteredResult&&"object"==typeof filteredResult&&"then"in filteredResult?filteredResult.then(handleFilterResult):handleFilterResult(filteredResult||[null,translations[1]]),!0}},_exports.capitalize=void 0,_exports.cleanParameterName=function(name){return name.replace(/\$/g,"_")},_exports.convertInt=function(str,def){if(str&&"number"==typeof str)return Math.floor(str);if(!str||!(str+"").trim()||!RegExp(/^\s*[+-]?\d+(\.\d*)?\s*$/).exec(str+""))return def;try{const val=parseInt(str+"");if(!isNaN(val))return val}catch(ex){}return def},_exports.createBinding=void 0,_exports.createFilterFunction=createFilterFunction,_exports.evalInContext=evalInContext,_exports.findVariableByName=function(varname,listVars){if(!listVars)return null;let found=null;const len=listVars.length;let k=0;for(;k<len&&!found;)listVars[k].name===varname&&(found=listVars[k]),k++;return found},_exports.genID=
/**
   * Tiny WidgetHub plugin.
   *
   * @module      tiny_widgethub/plugin
   * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
function(){return"g"+Math.random().toString(32).substring(2)},_exports.hashCode=function(s){let h=0;const l=(s=s||"").length;let i=0;if(l>0)for(;i<l;)h=(h<<6)+(s.charCodeAt(i)-65|0),i++;return Math.abs(h)},_exports.pathJoin=pathJoin,_exports.searchComp=function(str1,needle){return str1=(str1||"").trim().toLowerCase(),needle=(needle||"").trim().toLowerCase(),str1=str1.replace(/[àáâãäå]/,"a").replace(/[èéêë]/,"e").replace(/[ìíîï]/,"i").replace(/[òóôö]/,"o").replace(/[ùúüû]/,"u").replace(/ç/,"c").replace(/·/,""),needle=needle.replace(/[àáâãäå]/,"a").replace(/[èéêë]/,"e").replace(/[ìíîï]/,"i").replace(/[òóôö]/,"o").replace(/[ùúüû]/,"u").replace(/ç/,"c").replace(/·/,""),str1.indexOf(needle)>=0},_exports.stream=function(transformStr){return new Builder(transformStr)},_exports.toHexColor=function(color){if(!color)return"#000000";if(color.trim().startsWith("#"))return color.trim();const a=color.replace(/[^\d,]/g,"").split(",");return"#"+((1<<24)+(+a[0]<<16)+(+a[1]<<8)+ +a[2]).toString(16).slice(1)};const Transformers={toUpperCase:function(txt){return(txt+"").toUpperCase()},toLowerCase:function(txt){return(txt+"").toLowerCase()},trim:function(txt){return(txt+"").trim()},ytId:function(txt){const r=(txt||"").match(/^.*(?:(?:youtu\.be\/|v\/|vi\/|u\/\w\/|embed\/|shorts\/)|(?:(?:watch)?\?v(?:i)?=|&v(?:i)?=))([^#&?]*).*/);return null!=r&&r.length?r[1]:txt},vimeoId:function(txt){const match=(txt||"").match(/^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?(\d+)/);return null!=match&&match[5]?match[5]:txt},serveGDrive:function(txt){const res=(txt+"").match(/https:\/\/drive.google.com\/file\/d\/([a-zA-Z0-9_]+)\//);if(null!=res&&res.length){return"https://docs.google.com/uc?export=open&id="+res[1]}return txt},removeHTML:function(txt){return(txt||"").replace(/<[^>]*>?/gm,"")},escapeHTML:function(txt){return(txt||"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")},encodeHTML:function(txt){return this.encodeURIComponent(txt||"")},escapeQuotes:function(txt){return(txt||"").replace(/"/gm,"'")}};class Builder{transSeq;constructor(transformStr){const parts=transformStr.split("|");this.transSeq=[];for(let j=0,lenj=parts.length;j<lenj;j++){const prts=parts[j].trim(),transfunc=Transformers[prts];null!=transfunc?this.transSeq.push(transfunc):console.error("Cannot find transformer named "+prts)}}reduce(text){for(let j=0,lenj=this.transSeq.length;j<lenj;j++){text=(0,this.transSeq[j])(text)}return text}}function createFilterFunction(filterCode){filterCode=filterCode.replace("\x3c!--<widgetcode>","").replace("</widgetcode>--\x3e","");let userWidgetFilter=null;try{userWidgetFilter=new Function("text","tiny","opts",filterCode)}catch(ex){userWidgetFilter=null,console.error(ex)}return userWidgetFilter}function pathJoin(a,b){return a=(a||"").trim(),b=(b||"").trim(),a.endsWith("/")||(a+="/"),b.startsWith("/")&&(b=b.substring(1)),a+b}const performCasting=function(value,type){switch(type){case"boolean":value=1===value||"1"===value||!0===value||"true"===value;break;case"number":try{value=parseInt(value)}catch(ex){console.error("Error parsing number",ex)}break;case"string":value+=""}return value},xor=function(a,b){return!a!=!b},bindingFactory=function($e){const methods={hasClass:(className,query,neg)=>{let elem=$e;return query&&(elem=$e.find(query)),{getValue:()=>{const res=xor(neg,elem.hasClass(className));return Boolean(res)},setValue:bool=>{xor(neg,bool)?elem.addClass(className):elem.removeClass(className)}}},notHasClass:(className,query)=>methods.hasClass(className,query,!0),classRegex:(classExpr,query,castTo)=>{let elem=$e;return query&&(elem=$e.find(query)),{getValue:()=>{var _elem$attr;let ret="";return((null===(_elem$attr=elem.attr("class"))||void 0===_elem$attr?void 0:_elem$attr.split(/\s+/))??[]).forEach((c=>{const match=c.match(classExpr);null!=match&&match[1]&&"string"==typeof match[1]&&(ret=match[1])})),performCasting(ret,castTo)},setValue:val=>{var _elem$attr2;((null===(_elem$attr2=elem.attr("class"))||void 0===_elem$attr2?void 0:_elem$attr2.split(/\s+/))??[]).forEach((c=>{c.match(classExpr)&&elem.removeClass(c)})),elem.addClass(classExpr.replace("(.*)",val+""))}}},attr:(attrName,query,castTo)=>{let elem=$e;return query&&(elem=$e.find(query)),{getValue:()=>performCasting(elem.attr(attrName),castTo),setValue:val=>("boolean"==typeof val&&(val=val?1:0),elem.attr(attrName,val+""))}},hasAttr:(attr,query,neg)=>{let elem=$e;query&&(elem=$e.find(query));const parts=attr.split("="),attrName=parts[0].trim();let attrValue="";return parts.length>1&&(attrValue=parts[1].replace(/["']/g,"").trim()),{getValue:()=>{let found=null!=elem.attr(attrName);return attrValue&&(found=found&&elem.attr(attrName)===attrValue),xor(neg,found)},setValue:bool=>{xor(neg,bool)?elem.attr(attrName,attrValue||""):elem.removeAttr(attrName)}}},notHasAttr:(attr,query)=>methods.hasAttr(attr,query,!0),attrRegex:function(attr,query,castTo){let elem=$e;query&&(elem=$e.find(query));const parts=attr.split("="),attrName=parts[0].trim();let attrValue="";return parts.length>1&&(attrValue=parts[1].replace(/["']/g,"").trim()),{getValue(){if(null!=elem.attr(attrName)){var _elem$attr3;const match=null===(_elem$attr3=elem.attr(attrName))||void 0===_elem$attr3?void 0:_elem$attr3.match(attrValue);return null!=match&&match[1]&&"string"==typeof match[1]?performCasting(match[1],castTo):""}return null},setValue(val){elem.attr(attrName,attrValue.replace("(.*)",val+""))}}},hasStyle:function(sty,query,neg){let elem=$e;query&&(elem=$e.find(query));const parts=sty.split(":");let styValue,styName=parts[0].trim();return parts.length>1&&(styValue=parts[1].replace(/["']/g,"").trim()),{getValue(){const pValue=elem.prop("style").getPropertyValue(styName);return xor(void 0===styValue?""!==pValue:pValue===styValue,neg)},setValue(bool){if(xor(bool,neg))elem.css(styName,styValue??"");else{elem.prop("style").removeProperty(styName)}}}},notHasStyle:(sty,query)=>methods.hasStyle(sty,query,!0),styleRegex:function(attr,query,castTo){let elem=$e;query&&(elem=$e.find(query));const parts=attr.split(":"),styName=parts[0].trim();let styValue="";return parts.length>1&&(styValue=parts[1].replace(/["']/g,"").trim()),{getValue(){const st=elem.prop("style");if(null!=st.getPropertyValue(styName)){if(!styValue){const match=st.getPropertyValue(styName);return performCasting(match,castTo)}{const match=st.getPropertyValue(styName).match(styValue);if(null!=match&&match[1]&&"string"==typeof match[1])return performCasting(match[1],castTo)}return""}return null},setValue(val){styValue?elem.css(styName,styValue.replace("(.*)",val+"")):elem.css(styName,val)}}}};return methods};_exports.createBinding=(definition,elem,castTo)=>{let bindFn=null;return"string"==typeof definition?evalInContext({...bindingFactory(elem)},definition,!0):(bindFn={getValue:()=>{let v=evalInContext({elem:elem},`(${definition.get})(elem)`);return castTo&&(v=performCasting(v,castTo)),v},setValue:v=>evalInContext({elem:elem,v:v},`(${definition.set})(elem, v)`)},bindFn)};_exports.capitalize=s=>s&&s[0].toUpperCase()+s.slice(1)||""}));

//# sourceMappingURL=util.min.js.map