{"version":3,"file":"widget_settings.min.js","sources":["../src/widget_settings.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-tabs */\n/* eslint-disable no-alert */\nimport jQuery from 'jquery';\nimport {templateRenderer} from './util';\nimport CodeProEditor from './cm6pro-lazy';\nimport {load, dump} from './js_yaml-lazy';\nimport {get_strings as getStrings} from 'core/str';\n\n/**\n * @class\n * @member {any[]} presetdata\n * */\nexport default {\n\t/** @type {any[]} */\n\tpresetdata: [],\n\t/**\n\t * @param {number} id\n\t * @returns {{\n\t * \tjson: HTMLInputElement | null\n\t * }}\n\t */\n\tfetchcontrols: function(id) {\n\t\t/** @type {*} */\n\t\tconst json = document.getElementById(`id_s_tiny_widgethub_def_${id}`);\n\t\treturn {\n\t\t\tjson\n\t\t};\n\t},\n\t/**\n\t * @param {number} id\n\t * @param {number} presetindex\n\t * @param {any[]} [presetdata]\n\t * @returns\n\t */\n\tpopulateform: function(id, presetindex, presetdata) {\n\t\t// Get all our html controls\n\t\tconst controls = this.fetchcontrols(id);\n\t\tif (!controls.json) {\n\t\t\treturn;\n\t\t}\n\n\t\t// What a rip off there was no selection!!!\n\t\tif (!presetindex && !presetdata) {\n\t\t\treturn;\n\t\t}\n\t\tif (presetindex == 0 && presetdata) {\n\t\t\t// This is good, we have something from dopopulate\n\t\t} else {\n\t\t\t// This is a normal selection\n\t\t\tpresetdata = this.presetdata;\n\t\t}\n\t\tconst snpt = presetdata[presetindex];\n\n\t\t// Try to see JSON is valid\n\t\ttry {\n\t\t\tJSON.parse(snpt.json);\n\t\t\tcontrols.json.value = snpt.json;\n\t\t} catch (ex) {\n\t\t\tconsole.error(ex);\n\t\t\tcontrols.json.value = '';\n\t\t}\n\t},\n\t/**\n\t * @param {number} id\n\t * @param {*} codeProEditor\n\t * @returns\n\t */\n\tupdateYaml: function(id, codeProEditor) {\n\t\tconst controls = this.fetchcontrols(id);\n\t\tif (!controls.json?.value?.trim()) {\n\t\t\tcodeProEditor.setValue('');\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst obj = JSON.parse(controls.json.value);\n\t\t\tconst yml = dump(obj, {});\n\t\t\tcodeProEditor.setValue(yml);\n\t\t} catch (ex) {\n\t\t\tconsole.error(ex);\n\t\t\tcontrols.json.value = '';\n\t\t\tcodeProEditor.setValue('');\n\t\t}\n\t},\n\t/**\n\t * @param {number} id\n\t * @param {*} templatedata\n\t */\n\tdopopulate: function(id, templatedata) {\n\t\tconsole.info(\"dopopulate\", id, templatedata);\n\t\tthis.populateform(id, 0, new Array(templatedata));\n\t},\n\t/**\n\t * @param {string} yml\n\t * @param {{id: number, keys: string[], partials: any}} opts\n\t * @returns\n\t */\n\tvalidate: async function(yml, opts) {\n\t\t/**\n\t\t * @type {{\n\t\t * \tmsg: string,\n\t\t *  html: string,\n\t\t *  json: string | undefined\n\t\t * }}\n\t\t * */\n\t\tconst validation = {msg: '', html: '', json: undefined};\n\t\ttry {\n\t\t\t// The code is a valid Yaml\n\t\t\t/** @type {import('./util').Widget | undefined} */\n\t\t\tlet jsonObj;\n\t\t\ttry {\n\t\t\t\tjsonObj = load(yml, null) ?? {};\n\t\t\t} catch (ex) {\n\t\t\t\tvalidation.msg = \"Yaml syntax error:: \" + ex;\n\t\t\t}\n\t\t\tvalidation.json = JSON.stringify(jsonObj, null, 0);\n\t\t\t// The structure is correct\n\t\t\tif (!jsonObj?.key) {\n\t\t\t\tvalidation.msg = \"Yaml file must contain a 'key' property. \";\n\t\t\t} else if (jsonObj.key === \"partials\") {\n\t\t\t\treturn validation;\n\t\t\t} else if (jsonObj.key !== 'partials' && (!jsonObj.name || !jsonObj.template)) {\n\t\t\t\tvalidation.msg += \"Widgets must have 'name' and 'template' properties. \";\n\t\t\t}\n\t\t\t// Check for duplicated keys\n\t\t\tif (opts.id === 0 && jsonObj?.key) {\n\t\t\t\tconst keys = opts.keys || [];\n\t\t\t\tif (keys.includes(jsonObj.key)) {\n\t\t\t\t\tvalidation.msg += `Key ${jsonObj.key} is already in use. Please rename it. `;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle partials in parameters\n\t\t\tconst partials = opts.partials;\n\t\t\tconst paramsCopy = (jsonObj?.parameters || []).map(param => {\n\t\t\t\tlet pc = {...param};\n\t\t\t\tif (pc.partial && partials[pc.partial]) {\n\t\t\t\t\tpc = Object.assign(pc, partials[pc.partial]);\n\t\t\t\t}\n\t\t\t\treturn pc;\n\t\t\t});\n\t\t\t// Try to parse the template with mustache renderer\n\t\t\tconst translations = jsonObj?.I18n || {};\n\t\t\t/** @type {Object.<string, any>} */\n\t\t\tconst ctx = {};\n\t\t\tparamsCopy.forEach(param => {\n\t\t\t\tctx[param.name] = param.value;\n\t\t\t});\n\t\t\tconst engine = jsonObj?.engine;\n\t\t\tconst htmlRendered = await templateRenderer(jsonObj?.template || '', ctx, translations, engine);\n\t\t\tvalidation.html = htmlRendered;\n\t\t} catch (ex) {\n\t\t\tvalidation.msg = \"Renderer error:: \" + ex;\n\t\t}\n\t\treturn validation;\n\t},\n\n\t/**\n\t * Load all widgets\n\t * @param {{id: number, keys: string[], partials: any}} opts\n\t * @returns\n\t */\n\tinit: async function(opts) {\n\t\tconsole.info(\"Init AMD called with opts \", JSON.stringify(opts));\n\t\tconst i18n = await getStrings([\n\t\t\t{key: 'preview', component: 'tiny_widgethub'},\n\t\t\t{key: 'delete', component: 'tiny_widgethub'}\n\t\t]);\n\n\t\t// Hide the control that handles JSON and it is actually saved\n\t\tconst $controlMain = jQuery('#id_s_tiny_widgethub_def_' + opts.id);\n\t\t$controlMain.css(\"display\", \"none\");\n\t\tconst $target = $controlMain.parent();\n\n\t\t// Display the secondary editor for Yaml syntax\n\t\tconst $controlSecondary = jQuery(`<div id=\"tiny_widgethub_yc_${opts.id}\" class=\"tiny_widgethub-ymlcontrol\"></div>`);\n\t\t$target.append($controlSecondary);\n\n\t\tconst $previewPanel = jQuery(`<div id=\"tiny_widgethub_pp_${opts.id}\" class=\"tiny_widgethub-previewpanel d-none\"></div>`);\n\t\t$target.append($previewPanel);\n\n\t\tconst $previewBtn = jQuery(`<button type=\"button\" class=\"btn btn-secondary m-1\">${i18n[0]}</button>`);\n\t\t$previewBtn.on('click', async() => {\n\t\t\tconst yml = codeProEditor.getValue();\n\t\t\tconst validation = await this.validate(yml, opts);\n\t\t\tif (validation.msg) {\n\t\t\t\talert(validation.msg);\n\t\t\t} else {\n\t\t\t\t$previewPanel.removeClass('d-none');\n\t\t\t\t$controlMain.val(validation.json ?? '');\n\t\t\t\t$previewPanel.html(validation.html);\n\t\t\t}\n\t\t});\n\t\t$target.append($previewBtn);\n\n\t\tif (opts.id > 0) {\n\t\t\tconst $deleteBtn = jQuery(`<button type=\"button\" class=\"btn btn-danger m-1\">${i18n[1]}</button>`);\n\t\t\t$deleteBtn.on('click', async() => {\n\t\t\t\t// Clear all the controls\n\t\t\t\t$controlMain.val('');\n\t\t\t\t$controlSecondary.html('');\n\t\t\t\t$previewPanel.html('');\n\t\t\t\t// Send form by skipping validation\n\t\t\t\t$controlMain.closest(\"form\").trigger('submit', {skipValidation: true});\n\t\t\t});\n\t\t\t$target.append($deleteBtn);\n\t\t}\n\n\t\tconst codeProEditor = new CodeProEditor($controlSecondary[0]);\n\n\t\tconst self = this;\n\n\t\t// Handle the select box change event\n\t\tjQuery(\"select[name='tiny_widgethub/hub']\").on('change', function() {\n\t\t\t/** @type {any} */\n\t\t\tconst choosen = jQuery(this).val();\n\t\t\tconsole.info(choosen);\n\t\t\tif (!choosen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.populateform(opts.id, choosen);\n\t\t\tself.updateYaml(opts.id, codeProEditor);\n\t\t});\n\n\t\t$controlMain.closest(\"form\").on(\"submit\",\n\t\t\t/** @param {*} ev */\n\t\t\tasync(ev) => {\n\t\t\t// Must update the content from the Yaml control\n\t\t\tconst yml = codeProEditor.getValue();\n\t\t\t// First validate the definition of the widget\n\t\t\tif (!ev.skipValidation) {\n\t\t\t\tconst validation = await this.validate(yml, opts);\n\t\t\t\tif (validation.msg) {\n\t\t\t\t\talert(validation.msg);\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\t$controlMain.val(validation.json ?? '');\n\t\t\t\t}\n\t\t\t\tconsole.log(\"Returning validation result\", validation.msg);\n\t\t\t\treturn validation.msg === '';\n\t\t\t}\n\t\t\tconsole.log('Validation skipped');\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.updateYaml(opts.id, codeProEditor);\n\t}\n};\n"],"names":["presetdata","fetchcontrols","id","json","document","getElementById","populateform","presetindex","controls","this","snpt","JSON","parse","value","ex","console","error","updateYaml","codeProEditor","_controls$json","_controls$json$value","trim","obj","yml","setValue","dopopulate","templatedata","info","Array","validate","async","opts","validation","msg","html","undefined","jsonObj","stringify","_jsonObj","key","name","template","_jsonObj2","keys","includes","partials","paramsCopy","parameters","map","param","pc","partial","Object","assign","translations","I18n","ctx","forEach","engine","_jsonObj5","htmlRendered","init","i18n","component","$controlMain","css","$target","parent","$controlSecondary","append","$previewPanel","$previewBtn","on","getValue","alert","removeClass","val","$deleteBtn","closest","trigger","skipValidation","CodeProEditor","self","choosen","ev","preventDefault","log"],"mappings":"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"}