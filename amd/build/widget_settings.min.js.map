{"version":3,"file":"widget_settings.min.js","sources":["../src/widget_settings.js"],"sourcesContent":["/* eslint-disable max-len */\n\n/* eslint-disable no-console */\n/* eslint-disable no-alert */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {YmlEditor, YAML} from './libs/ymleditor-lazy';\n// eslint-disable-next-line camelcase\nimport {get_strings as getStrings, get_string} from 'core/str';\nimport {getTemplateSrv, createDefaultsForParam} from './service/template_service';\nimport {applyPartials} from './options';\nimport common from './common';\nimport {compareVersion, htmlToElement} from './util';\n\n/**\n * Does a key name of the yaml file requires a block format?\n * @param {string} str\n * @returns {boolean}\n */\nfunction needsBlock(str) {\n  return typeof str === 'string' && str.includes('\\n');\n}\n\nconst {component} = common;\nconst templateSrv = getTemplateSrv();\nconst DEFAULT_DOC =\n    `key: username_sample-key\nname: Minimal sample widget\ncategory: Examples\ntemplate: |\n  <p><br></p>\n  <p>Write your template {{greeting}}</p>\n  <p><br></p>\nparameters:\n  - name: greeting\n    value: Hello world!\nauthor: Your name <email@site.com>\nversion: 1.0.0`;\n\n/**\n * Checks whether HTML tags are balanced, ignoring EJS blocks like <% %>.\n * @param {string} input The HTML+EJS string.\n * @returns {string[]} Stack of tags not closing.\n */\nfunction unbalancedHTMLWithEJS(input) {\n    // Remove EJS tags.\n    const withoutEJS = input.replace(/<%[\\s\\S]*?%>/g, '');\n\n    // HTML self-closing tags.\n    const selfClosing = new Set([\n        'area', 'base', 'br', 'col', 'embed', 'hr', 'img',\n        'input', 'link', 'meta', 'source', 'track', 'wbr'\n    ]);\n\n    const tagRegex = /<\\/?([a-zA-Z][a-zA-Z0-9]*)\\b[^>]*>/g;\n    const stack = [];\n    let match;\n\n    while ((match = tagRegex.exec(withoutEJS)) !== null) {\n        const fullTag = match[0];\n        const tagName = match[1].toLowerCase();\n        const isClosing = fullTag.startsWith('</');\n\n        // Skip self-closing\n        if (selfClosing.has(tagName) || fullTag.endsWith('/>')) {\n            continue;\n        }\n\n        if (!isClosing) {\n            stack.push(tagName);\n        } else {\n            if (stack.length === 0 || stack.pop() !== tagName) {\n                if (stack.length === 0) {\n                    stack.push(tagName);\n                }\n                return stack;\n            }\n        }\n    }\n    return stack;\n}\n\n/**\n * Replaces placeholders \"@i\" from 1 to n in the str\n * @param {string} str\n * @param  {...string} comodins\n * @returns {string}\n */\nfunction replacePlaceholders(str, ...comodins) {\n    return str.replace(/@(\\d+)/g, (match, index) => {\n        const i = parseInt(index, 10);\n        return comodins[i - 1] !== undefined ? comodins[i - 1] : match;\n    });\n}\n\n/**\n * @class\n * @member {any[]} presetdata\n * */\nexport default {\n    /**\n     * @param {number} id\n     * @returns {{\n     *     ymlArea: HTMLTextAreaElement,\n     *     jsonArea: HTMLTextAreaElement,\n     *     partialInput: HTMLInputElement,\n     * }}\n     */\n    getAreas: function(id) {\n        /** @type {*} */\n        const ymlArea = document.querySelector(`#id_s_${component}_defyml_${id}`);\n        /** @type {*} */\n        const jsonArea = document.querySelector(`#id_s_${component}_def_${id}`);\n        /** @type {*} */\n        const partialInput = document.querySelector(`#id_s_${component}_partials_${id}`);\n        return {\n            ymlArea, jsonArea, partialInput\n        };\n    },\n    /**\n     * @param {number} id\n     * @param {*} codeProEditor\n     * @returns\n     */\n    updateYaml: function(id, codeProEditor) {\n        const {jsonArea} = this.getAreas(id);\n        const json = ((jsonArea.value ?? '') + '').trim();\n        if (!json) {\n            if (id) {\n                codeProEditor.setValue('');\n            } else {\n                codeProEditor.setValue(DEFAULT_DOC);\n            }\n            return;\n        }\n        try {\n            const _obj = JSON.parse(json);\n            const blockKeys = {\n                template: 'BLOCK_LITERAL',\n                filter: 'BLOCK_LITERAL',\n                instructions: 'BLOCK_FOLDED',\n            };\n\n            for (const [key, style] of Object.entries(blockKeys)) {\n                if (needsBlock(_obj[key])) {\n                    /** @type {any} */\n                    const scalar = new YAML.Scalar(_obj[key]);\n                    scalar.type = style;\n                    if (style === 'BLOCK_FOLDED') {\n                        scalar.chomping = 'CLIP';\n                    }\n                    _obj[key] = scalar;\n                }\n            }\n            if (Array.isArray(_obj.parameters)) {\n                for (const param of _obj.parameters) {\n                    if (param.bind && typeof param.bind === 'object') {\n                    ['get', 'set'].forEach(key => {\n                        if (needsBlock(param.bind[key])) {\n                            param.bind[key] = new YAML.Scalar(param.bind[key]);\n                            param.bind[key].type = 'BLOCK_LITERAL';\n                        }\n                    });\n                    }\n                }\n            }\n            const yml = YAML.stringify(_obj, {indent: 2});\n            codeProEditor.setValue(yml);\n        } catch (ex) {\n            console.error(ex);\n            jsonArea.value = '';\n            codeProEditor.setValue('');\n        }\n    },\n    /**\n     * @param {string} yml\n     * @param {{id: number, keys: string[]}} opts\n     * @param {Record<string, *>} partials\n     * @returns {Promise<{msg: string, json?: string, html?: string}>}\n     */\n    // eslint-disable-next-line complexity\n    validate: async function(yml, opts, partials) {\n        /**\n         * @type {{\n         *     msg: string,\n         *     html: string,\n         *     json: string | undefined\n         * }}\n         * */\n        const validation = {msg: '', html: '', json: undefined};\n        try {\n            // Check if the code is a valid Yaml\n            /** @type {import('./options').RawWidget} */\n            let jsonObj;\n            try {\n                jsonObj = YAML.parse(yml);\n            } catch (ex) {\n                validation.msg = await get_string('erryaml', component) + ':: ' + ex;\n                return validation;\n            }\n            validation.json = JSON.stringify(jsonObj, null, 0);\n\n            // Check if the structure is correct\n            if (!jsonObj?.key?.trim()) {\n                validation.msg = await get_string('errproprequired', component, \"'key'\") + ' ';\n            } else if (jsonObj.key === 'partials') {\n                // Do not apply validation on partials file\n                return validation;\n            } else if (jsonObj.key !== 'partials') {\n                if (!jsonObj.name) {\n                    validation.msg += await get_string('errproprequired', component, \"'name'\") + ' ';\n                } else if (!(jsonObj.template || jsonObj.filter)) {\n                    validation.msg += await get_string('errproprequired', component, \"'template' | 'filter'\") + ' ';\n                } else if (jsonObj.template && jsonObj.filter) {\n                    validation.msg += await get_string('errpropincompatible', component, \"'template' & 'filter'\") + ' ';\n                } else if (!jsonObj.author || !jsonObj.version) {\n                    validation.msg += await get_string('errproprequired', component, \"'author' & 'version'\") + ' ';\n                }\n            }\n            // Check for duplicated keys (TODO: also check for key renaming when id > 0)\n            if (opts.id === 0 && jsonObj?.key) {\n                const keys = opts.keys || [];\n                if (keys.includes(jsonObj.key)) {\n                    validation.msg += await get_string('errkeyinuse', component, jsonObj.key) + ' ';\n                }\n            }\n            // Handle partials in parameters.\n            applyPartials(jsonObj, partials);\n            // Tests on template.\n            if (jsonObj.template) {\n                // Check if open and close tags are balanced.\n                const stack = unbalancedHTMLWithEJS(jsonObj.template);\n                if (stack.length > 0) {\n                    validation.msg += await get_string('errunbalancedhtml', component) + ': ' + stack;\n                    return validation;\n                }\n                // Try to parse the template with the correct renderer.\n                const translations = jsonObj?.I18n ?? {};\n                /** @type {Object.<string, any>} */\n                const ctx = {};\n                (jsonObj.parameters ?? []).forEach(param => {\n                    ctx[param.name] = createDefaultsForParam(param, true);\n                });\n                const engine = jsonObj?.engine;\n                try {\n                    const html = await templateSrv.render(jsonObj?.template || '', ctx, translations, engine);\n                    validation.html = html;\n                } catch (ex0) {\n                    validation.msg = await get_string('errpreview', component) + ':: ' + ex0;\n                }\n            }\n\n            // Check parameters\n            if (jsonObj.parameters) {\n                // Select types\n                const errStr1 = await get_string('errparamtype', component);\n                const errStr2 = await get_string('errparamvalue', component);\n                jsonObj.parameters\n                    .filter(p => p.type === 'select' || p.type === 'autocomplete' || p.options)\n                    .forEach(p => {\n                        if (!p.options || !Array.isArray(p.options)) {\n                            validation.msg += replacePlaceholders(errStr1, p.name + '.options', 'Array');\n                            return;\n                        }\n                        if (p.type === 'select') {\n                            const options = p.options.map(o => typeof (o) === 'string' ? o : o.v);\n                            if (p.value === undefined || options.indexOf(p.value) < 0) {\n                                validation.msg += replacePlaceholders(errStr2, p.name + '.value', 'in options');\n                                return;\n                            }\n                        }\n                    });\n            }\n\n            // Check if the widget is compatible the with current release\n            if (jsonObj.plugin_release && !compareVersion(common.currentRelease, jsonObj.plugin_release)) {\n                const errStr3 = await get_string('errversionmismatch', component, {\n                    required: jsonObj.plugin_release,\n                    installed: common.currentRelease\n                });\n                validation.msg += errStr3;\n            }\n        } catch (ex) {\n            validation.msg = await get_string('errunexpected', component) + ':: ' + ex;\n        }\n        return validation;\n    },\n\n    /**\n     * Load all widgets\n     * @param {{id: number, keys: string[]}} opts\n     * @returns\n     */\n    init: async function(opts) {\n        const {ymlArea, jsonArea, partialInput} = this.getAreas(opts.id);\n        ymlArea.style.border = '1px solid gray';\n        ymlArea.classList.add(component + '-loader');\n        const i18n = await getStrings([\n            {key: 'confirmdelete', component: component},\n            {key: 'delete', component: component},\n            {key: 'preview', component: component},\n            {key: 'savechanges', component: component}\n        ]);\n        const [confirmdeleteStr, deleteStr, previewStr, savechangesStr] = i18n;\n\n        // Partials are passed through a hidden input element\n        const partials = JSON.parse(partialInput.value || '{}');\n\n        // Hide the control that handles JSON and it is actually saved\n        jsonArea.style.display = 'none';\n        // Immediate parent\n        const target = jsonArea.parentNode;\n        // Closest ancestor matching selector\n        const form = jsonArea.closest(\"form\");\n        if (!form || !target) {\n            return;\n        }\n        // Hide any submit button if found\n        /** @type {NodeListOf<HTMLElement>} */\n        const submitButtons = form.querySelectorAll('button[type=\"submit\"], input[type=\"submit\"]');\n        submitButtons.forEach(elem => {\n            elem.style.display = 'none';\n        });\n        // Add submit buttons and manually trigger form submit.\n        const formButtons = htmlToElement(document, `<div class=\"row\"><div class=\"form-buttons offset-sm-3 col-sm-3\">\n            <button type=\"button\" class=\"btn btn-primary form-submit\">${savechangesStr}</button></div></div>`);\n        form.appendChild(formButtons);\n        const saveBtn = formButtons.querySelector(\"button\");\n\n        // Create a preview panel\n        const previewPanel = htmlToElement(document, `<div id=\"${component}_pp_${opts.id}\" class=\"${component}-previewpanel d-none\"></div>`);\n        target.appendChild(previewPanel);\n\n        const previewBtn = htmlToElement(document, `<button type=\"button\" class=\"btn btn-secondary m-1\">\n            <i class=\"fas fa fa-magnifying-glass\"></i> ${previewStr}</button>`);\n        previewBtn.addEventListener('click', async() => {\n            const yml = ymleditor.getValue();\n            const validation = await this.validate(yml, opts, partials);\n            if (validation.json && JSON.parse(validation.json).key === 'partials') {\n                // Cannot preview the partials file.\n                return;\n            }\n            if (validation.msg) {\n                alert(validation.msg);\n            } else if (validation.html) {\n                previewPanel.classList.remove('d-none');\n                jsonArea.dispatchEvent(new Event('focusin', {bubbles: true}));\n                jsonArea.value = validation.json ?? '';\n                jsonArea.dispatchEvent(new Event('change', {bubbles: true}));\n                previewPanel.innerHTML = validation.html;\n            }\n        });\n        target.appendChild(previewBtn);\n\n        if (opts.id > 0) {\n            // Only show delete button on saved widgets (id=0 is reserved for new ones)\n            const deleteBtn = htmlToElement(document, `<button type=\"button\" class=\"btn btn-outline-danger m-1\">\n                <i class=\"fas fa fa-trash\"></i> ${deleteStr}</button>`);\n            deleteBtn.addEventListener('click', async() => {\n                // Ask confirmation\n                const answer = confirm(confirmdeleteStr);\n                if (!answer) {\n                    return;\n                }\n                // Clear all the controls\n                jsonArea.dispatchEvent(new Event('focusin', {bubbles: true}));\n                jsonArea.value = '';\n                jsonArea.dispatchEvent(new Event('change', {bubbles: true}));\n                ymlArea.value = '';\n                previewPanel.innerHTML = '';\n                // Send form by skipping validation\n                form.requestSubmit();\n            });\n            target.appendChild(deleteBtn);\n        }\n\n        const ymleditor = new YmlEditor(ymlArea);\n\n        saveBtn?.addEventListener(\"click\", async() => {\n                // Must update the content from the Yaml control\n                const yml = ymleditor.getValue();\n                // First validate the definition of the widget\n                const validation = await this.validate(yml, opts, partials);\n                if (validation.msg) {\n                    alert(validation.msg);\n                } else {\n                    // Ensure that there is a change in the form value to force\n                    // the set_updatedcallback to be called\n                    jsonArea.dispatchEvent(new Event('focusin', {bubbles: true}));\n                    jsonArea.value = (validation.json ?? '') + ' ';\n                    jsonArea.dispatchEvent(new Event('change', {bubbles: true}));\n                    // Submit form\n                    form.requestSubmit();\n                }\n            });\n\n        this.updateYaml(opts.id, ymleditor);\n        ymlArea.classList.remove(component + '-loader');\n    }\n};\n"],"names":["needsBlock","str","includes","component","common","templateSrv","replacePlaceholders","comodins","replace","match","index","i","parseInt","undefined","getAreas","id","ymlArea","document","querySelector","jsonArea","partialInput","updateYaml","codeProEditor","this","json","value","trim","_obj","JSON","parse","blockKeys","template","filter","instructions","key","style","Object","entries","scalar","YAML","Scalar","type","chomping","Array","isArray","parameters","param","bind","forEach","yml","stringify","indent","setValue","ex","console","error","validate","async","opts","partials","validation","msg","html","jsonObj","_jsonObj","_jsonObj$key","name","author","version","_jsonObj2","keys","stack","input","withoutEJS","selfClosing","Set","tagRegex","exec","fullTag","tagName","toLowerCase","isClosing","startsWith","has","endsWith","length","pop","push","unbalancedHTMLWithEJS","translations","I18n","ctx","engine","_jsonObj4","render","ex0","errStr1","errStr2","p","options","map","o","v","indexOf","plugin_release","currentRelease","errStr3","required","installed","init","border","classList","add","i18n","confirmdeleteStr","deleteStr","previewStr","savechangesStr","display","target","parentNode","form","closest","querySelectorAll","elem","formButtons","appendChild","saveBtn","previewPanel","previewBtn","addEventListener","ymleditor","getValue","alert","remove","dispatchEvent","Event","bubbles","innerHTML","deleteBtn","confirm","requestSubmit","YmlEditor"],"mappings":"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"}