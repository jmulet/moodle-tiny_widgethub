{"version":3,"file":"widget_settings.min.js","sources":["../src/widget_settings.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-tabs */\n/* eslint-disable no-alert */\nimport jQuery from 'jquery';\nimport CodeProEditor from './libs/cm6pro-lazy';\nimport {load, dump} from './libs/js_yaml-lazy';\nimport {get_strings as getStrings} from 'core/str';\nimport {getTemplateSrv} from './service/templateSrv';\n\nconst templateSrv = getTemplateSrv();\n\n/**\n * @class\n * @member {any[]} presetdata\n * */\nexport default {\n\t/**\n\t * @param {number} id\n\t * @returns {{\n\t * \t$ymlArea: JQuery<HTMLElement>,\n\t * \t$jsonArea: JQuery<HTMLElement>,\n\t * }}\n\t */\n\tgetAreas: function(id) {\n\t\t/** @type {*} */\n\t\tconst $ymlArea = jQuery(`#id_s_tiny_widgethub_defyml_${id}`);\n\t\tconst $jsonArea = jQuery(`#id_s_tiny_widgethub_def_${id}`);\n\t\treturn {\n\t\t\t$ymlArea, $jsonArea\n\t\t};\n\t},\n\t/**\n\t * @param {number} id\n\t * @param {*} codeProEditor\n\t * @returns\n\t */\n\tupdateYaml: function(id, codeProEditor) {\n\t\tconst {$jsonArea} = this.getAreas(id);\n\t\tconst json = ($jsonArea.val() ?? '').trim();\n\t\tif (!json) {\n\t\t\tcodeProEditor.setValue('');\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst obj = JSON.parse(json);\n\t\t\tconst yml = dump(obj, {});\n\t\t\tcodeProEditor.setValue(yml);\n\t\t} catch (ex) {\n\t\t\tconsole.error(ex);\n\t\t\t$jsonArea.val('');\n\t\t\tcodeProEditor.setValue('');\n\t\t}\n\t},\n\t/**\n\t * @param {string} yml\n\t * @param {{id: number, keys: string[], partials: any}} opts\n\t * @returns {Promise<{msg: string, json?: string, html?: string}>}\n\t */\n\tvalidate: async function(yml, opts) {\n\t\t/**\n\t\t * @type {{\n\t\t * \tmsg: string,\n\t\t *  html: string,\n\t\t *  json: string | undefined\n\t\t * }}\n\t\t * */\n\t\tconst validation = {msg: '', html: '', json: undefined};\n\t\ttry {\n\t\t\t// Check if the code is a valid Yaml\n\t\t\t/** @type {import('./options').RawWidget | undefined} */\n\t\t\tlet jsonObj;\n\t\t\ttry {\n\t\t\t\tjsonObj = load(yml, null) ?? {};\n\t\t\t} catch (ex) {\n\t\t\t\tvalidation.msg = \"Yaml syntax error:: \" + ex;\n\t\t\t}\n\t\t\tvalidation.json = JSON.stringify(jsonObj, null, 0);\n\n\t\t\t// Check if the structure is correct\n\t\t\tif (!jsonObj?.key) {\n\t\t\t\tvalidation.msg = \"Yaml file must contain a 'key' property. \";\n\t\t\t} else if (jsonObj.key === \"partials\") {\n\t\t\t\treturn validation;\n\t\t\t} else if (jsonObj.key !== 'partials' && (!jsonObj.name || !jsonObj.template)) {\n\t\t\t\tvalidation.msg += \"Widgets must have 'name' and 'template' properties. \";\n\t\t\t}\n\t\t\t// Check for duplicated keys\n\t\t\tif (opts.id === 0 && jsonObj?.key) {\n\t\t\t\tconst keys = opts.keys || [];\n\t\t\t\tif (keys.includes(jsonObj.key)) {\n\t\t\t\t\tvalidation.msg += `Key ${jsonObj.key} is already in use. Please rename it. `;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle partials in parameters\n\t\t\tconst partials = opts.partials;\n\t\t\tconst paramsCopy = (jsonObj?.parameters || []).map(param => {\n\t\t\t\tlet pc = {...param};\n\t\t\t\tif (pc.partial && partials[pc.partial]) {\n\t\t\t\t\tpc = Object.assign(pc, partials[pc.partial]);\n\t\t\t\t}\n\t\t\t\treturn pc;\n\t\t\t});\n\t\t\t// Try to parse the template with the correct renderer\n\t\t\tconst translations = jsonObj?.I18n || {};\n\t\t\t/** @type {Object.<string, any>} */\n\t\t\tconst ctx = {};\n\t\t\tparamsCopy.forEach(param => {\n\t\t\t\tctx[param.name] = param.value;\n\t\t\t});\n\t\t\tconst engine = jsonObj?.engine;\n\t\t\tconst html = await templateSrv.render(jsonObj?.template || '', ctx, translations, engine);\n\t\t\tvalidation.html = html;\n\t\t} catch (ex) {\n\t\t\tvalidation.msg = \"Renderer error:: \" + ex;\n\t\t}\n\t\treturn validation;\n\t},\n\n\t/**\n\t * Load all widgets\n\t * @param {{id: number, keys: string[], partials: any}} opts\n\t * @returns\n\t */\n\tinit: async function(opts) {\n\t\tconsole.info(\"Init AMD called with opts \", JSON.stringify(opts));\n\t\tconst i18n = await getStrings([\n\t\t\t{key: 'preview', component: 'tiny_widgethub'},\n\t\t\t{key: 'delete', component: 'tiny_widgethub'}\n\t\t]);\n\n\t\tconst {$ymlArea, $jsonArea} = this.getAreas(opts.id);\n\n\t\t// Hide the control that handles JSON and it is actually saved\n\t\t$jsonArea.css(\"display\", \"none\");\n\t\tconst $target = $jsonArea.parent();\n\t\tconst $form = $jsonArea.closest(\"form\");\n\t\t// Hide any submit button if found\n\t\t$form.find('button[type=\"submit\"], input[type=\"submit\"]').hide();\n\t\t// Add submit buttons and manually trigger form submit.\n\t\tconst $formButtons =\n\t\t\tjQuery('<div class=\"form-buttons\"><button class=\"btn btn-primary form-submit\">Save changes</button></div>');\n\t\t$form.append($formButtons);\n\t\tconst $saveBtn = $formButtons.find(\"button\");\n\n\t\t// Create a preview panel\n\t\tconst $previewPanel = jQuery(`<div id=\"tiny_widgethub_pp_${opts.id}\" class=\"tiny_widgethub-previewpanel d-none\"></div>`);\n\t\t$target.append($previewPanel);\n\n\t\tconst $previewBtn = jQuery(`<button type=\"button\" class=\"btn btn-secondary m-1\">${i18n[0]}</button>`);\n\t\t$previewBtn.on('click', async() => {\n\t\t\tconst yml = codeProEditor.getValue();\n\t\t\tconst validation = await this.validate(yml, opts);\n\t\t\tif (validation.msg) {\n\t\t\t\talert(validation.msg);\n\t\t\t} else if (validation.html) {\n\t\t\t\t$previewPanel.removeClass('d-none');\n\t\t\t\t$jsonArea.trigger('focusin');\n\t\t\t\t$jsonArea.val(validation.json ?? '');\n\t\t\t\t$jsonArea.trigger('change');\n\t\t\t\t$previewPanel.html(validation.html);\n\t\t\t}\n\t\t});\n\t\t$target.append($previewBtn);\n\n\t\tif (opts.id > 0) {\n\t\t\t// Only show delete button on saved widgets (id=0 is reserved for new ones)\n\t\t\tconst $deleteBtn = jQuery(`<button type=\"button\" class=\"btn btn-danger m-1\">${i18n[1]}</button>`);\n\t\t\t$deleteBtn.on('click', async() => {\n\t\t\t\t// Clear all the controls\n\t\t\t\t$jsonArea.trigger('focusin');\n\t\t\t\t$jsonArea.val('');\n\t\t\t\t$jsonArea.trigger('change');\n\t\t\t\t$ymlArea.html('');\n\t\t\t\t$previewPanel.html('');\n\t\t\t\t// Send form by skipping validation\n\t\t\t\t$form.trigger('submit');\n\t\t\t});\n\t\t\t$target.append($deleteBtn);\n\t\t}\n\n\t\tconst codeProEditor = new CodeProEditor($ymlArea[0]);\n\n\t\t$saveBtn.on(\"click\",\n\t\t\tasync() => {\n\t\t\t// Must update the content from the Yaml control\n\t\t\tconst yml = codeProEditor.getValue();\n\t\t\t// First validate the definition of the widget\n\t\t\tconst validation = await this.validate(yml, opts);\n\t\t\tif (validation.msg) {\n\t\t\t\talert(validation.msg);\n\t\t\t} else {\n\t\t\t\t// Ensure that there is a change in the form value to force\n\t\t\t\t// the set_updatedcallback to be called\n\t\t\t\t$jsonArea.trigger('focusin');\n\t\t\t\t$jsonArea.val((validation.json ?? '') + ' ');\n\t\t\t\t$jsonArea.trigger('change');\n\t\t\t\t// Submit form\n\t\t\t\t$form.trigger('submit');\n\t\t\t}\n\t\t});\n\n\t\tthis.updateYaml(opts.id, codeProEditor);\n\t}\n};\n"],"names":["templateSrv","getAreas","id","$ymlArea","$jsonArea","updateYaml","codeProEditor","this","json","val","trim","obj","JSON","parse","yml","setValue","ex","console","error","validate","async","opts","validation","msg","html","undefined","jsonObj","stringify","_jsonObj","key","name","template","_jsonObj2","keys","includes","partials","paramsCopy","parameters","map","param","pc","partial","Object","assign","translations","I18n","ctx","forEach","value","engine","_jsonObj5","render","init","info","i18n","component","css","$target","parent","$form","closest","find","hide","$formButtons","append","$saveBtn","$previewPanel","$previewBtn","on","getValue","alert","removeClass","trigger","$deleteBtn","CodeProEditor"],"mappings":"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"}