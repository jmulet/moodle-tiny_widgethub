{"version":3,"file":"contextInit.min.js","sources":["../src/contextInit.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable max-len */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {getWidgetDict} from './options';\nimport jQuery from \"jquery\";\nimport {getDomSrv} from './service/domSrv';\nimport {getWidgetPropertiesCtrl} from './controller/widgetPropertiesCtrl';\nimport {getMenuItemProviders, getListeners} from './extension';\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Defines the type PathResult\n * @typedef {Object} PathResult\n * @property {JQuery<HTMLElement>} selectedElement - The DOM element from which the search starts.\n * @property {JQuery<HTMLElement>} [elem] - Indicates the element corresponding to the selector of the widget found\n * @property {JQuery<HTMLElement>} [targetElement] - Indicates the element corresponding the intermediate selector\n * @property {import('./options').Widget=} widget - The current widget definition associated with the elem\n */\n\n/**\n * @typedef {Object} ICONS\n * @property {string} gear\n * @property {string} arrowUpFromBracket\n * @property {string} arrowUp\n * @property {string} arrowDown\n * @property {string} arrowLeft\n * @property {string} arrowRight\n * @property {string} remove\n * @property {string} clone\n */\nconst ICONS = {\n    gear: 'gear',\n    arrowUpFromBracket: 'arrow-up-from-bracket',\n    arrowUp: 'arrow-up',\n    arrowDown: 'arrow-down',\n    arrowLeft: 'arrow-left',\n    arrowRight: 'arrow-right',\n    remove: 'remove',\n    clone: 'clone'\n};\n\n/**\n * Define icons used by the context menus. Source: FontAwesome 6\n * <!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->\n * @param {import(\"./plugin\").TinyMCE} editor - The tinyMCE editor instance\n */\nconst defineIcons = function(editor) {\n    editor.ui.registry.addIcon(ICONS.gear, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowUpFromBracket, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M246.6 9.4c-12.5-12.5-32.8-12.5-45.3 0l-128 128c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 109.3 192 320c0 17.7 14.3 32 32 32s32-14.3 32-32l0-210.7 73.4 73.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-128-128zM64 352c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-64z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowUp, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2 160 448c0 17.7 14.3 32 32 32s32-14.3 32-32l0-306.7L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowDown, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowLeft, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowRight, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.clone, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M64 464l224 0c8.8 0 16-7.2 16-16l0-64 48 0 0 64c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 224c0-35.3 28.7-64 64-64l64 0 0 48-64 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zM224 304l224 0c8.8 0 16-7.2 16-16l0-224c0-8.8-7.2-16-16-16L224 48c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zm-64-16l0-224c0-35.3 28.7-64 64-64L448 0c35.3 0 64 28.7 64 64l0 224c0 35.3-28.7 64-64 64l-224 0c-35.3 0-64-28.7-64-64z\"/></svg>');\n};\n\n/**\n * @param {import('./options').Widget} widget\n * @returns {boolean}\n */\nfunction hasBindings(widget) {\n    return widget.parameters?.some(param => param.bind !== undefined) ?? false;\n}\n\n/**\n * Decides if a widget needs some kind of context menu or toolbar\n * @param {import('./options').Widget} widget - The widget\n * @returns {boolean}\n */\nconst needsContextMenu = function(widget) {\n    return widget.hasBindings() || (widget.unwrap ?? '').trim().length > 0;\n};\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @param {import('./service/domSrv').DomSrv} domSrv\n */\nconst predefinedActionsFactory = function(editor, domSrv) {\n    /** @type {Record<string, Function>} */\n    return ({\n        /**\n         * Unwraps or destroys the contents of a widget\n         * @param {PathResult} context\n         */\n        unwrap: (context) => {\n            if (!context?.elem || !context?.widget?.unwrap) {\n                return;\n            }\n            /** @type {JQuery<HTMLElement> | string} */\n            let toUnpack = context.elem.find(context.widget.unwrap);\n            if (!toUnpack[0]) {\n                // Create a text element\n                toUnpack = context.elem.text();\n            }\n            context.elem.replaceWith(toUnpack);\n            // Call any subscribers\n            getListeners('widgetRemoved').forEach(listener => listener(editor, context.widget));\n        },\n        /**\n         * Moves the selected element above in the parent container\n         * unless it is the first one\n         * If $e or any of its descendants references another element in\n         * the widget, then it also must be moved before its sibling\n         * @param {PathResult} context\n         */\n        movebefore: (context) => {\n            const $e = context?.targetElement;\n            const $root = context?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            const prev = $e.prev();\n            if (prev) {\n                prev.insertAfter($e);\n                domSrv.findReferences($e, $root).forEach($ref => {\n                    const prev2 = $ref.prev();\n                    if (prev2) {\n                        prev2.insertAfter($ref);\n                    }\n                });\n            }\n        },\n        /**\n         * Moves the selected element above in the parent container\n         * unless it is the first one\n         * If $e or any of its descendants references another element in\n         * the widget, then it also must be moved after its sibling\n         * @param {PathResult} context\n         */\n        moveafter: (context) => {\n            const $e = context?.targetElement;\n            const $root = context?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            const next = $e.next();\n            if (next) {\n                next.insertBefore($e);\n                domSrv.findReferences($e, $root).forEach($ref => {\n                    const next2 = $ref.next();\n                    if (next2) {\n                        next2.insertBefore($ref);\n                    }\n                });\n            }\n        },\n        /**\n         * Inserts a clone of the selected element after it\n         * @param {PathResult} context\n         */\n        insertafter: (context) => {\n            const $e = context?.targetElement;\n            const $root = context?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            /** @type {Record<string, string>} */\n            const idMap = {};\n            const clone = domSrv.smartClone($e, $root, idMap);\n            clone.insertAfter($e).removeClass(\"active show\");\n        },\n        /**\n         * Removes the selected element\n         * @param {PathResult} context\n         */\n        remove: (context) => {\n            const $e = context?.targetElement;\n            const $root = context?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            // Does the $e or its descendants reference another element in the widget?\n            // If so, it must be removed too\n            domSrv.findReferences($e, $root).forEach($ref => $ref.remove());\n            const $parent = $e.parent();\n            $e.remove();\n            if ($parent.children().length === 0) {\n                // Good candidate to remove the entire widget\n                $root.remove();\n            }\n        }\n    });\n};\n\n/**\n * @typedef {{editor: import('./plugin').TinyMCE, path?: PathResult}} ItemMenuContext\n */\n\n/**\n * Looks for widgets that need to display context toolbars or menus\n * and binds the corresponding actions.\n * @param {import(\"./plugin\").TinyMCE} editor\n */\nexport function initContextActions(editor) {\n    // Setup context shared by the entire structure of menus\n    /**\n     * Keep track of the last context found\n     * @type {ItemMenuContext}\n     */\n    const ctx = {\n        editor: editor,\n    };\n\n    // Define icons\n    defineIcons(editor);\n\n    const widgetList = Object.values(getWidgetDict(editor));\n    const domSrv = getDomSrv();\n\n    /** @type {Record<string, Function>} */\n    const predefinedActions = predefinedActionsFactory(editor, domSrv);\n\n    const showPropertiesAction = async() => {\n        const path = domSrv.findWidgetOnEventPath(widgetList, editor.selection.getNode());\n        ctx.path = path;\n        if (!path.widget) {\n            return;\n        }\n        // Display modal dialog on this context\n        const widgetPropertiesCtrl = getWidgetPropertiesCtrl(editor);\n        await widgetPropertiesCtrl.show(path);\n    };\n\n    // Generic button action for opening the properties modal\n    editor.ui.registry.addButton('widgethub_modal_btn', {\n        icon: ICONS.gear,\n        tooltip: 'Properties',\n        onAction: showPropertiesAction\n    });\n    editor.ui.registry.addMenuItem('widgethub_modal_item', {\n        icon: ICONS.gear,\n        text: 'Properties',\n        onAction: showPropertiesAction\n    });\n\n    /**\n     * Defines a generic action\n     * @param {string} name\n     */\n    function genericAction(name) {\n        return function() {\n            if (!ctx.path?.widget) {\n                ctx.path = domSrv.findWidgetOnEventPath(widgetList, editor.selection.getNode());\n                if (!ctx.path?.widget) {\n                    return;\n                }\n            }\n            const action = predefinedActions[name];\n            if (action) {\n                action(ctx.path);\n                // Call any subscriber\n                getListeners('ctxAction').forEach(listener => listener(editor, ctx.path?.widget));\n            }\n        };\n    }\n\n    // Generic button action for unwrapping those widgets that support this feature\n    editor.ui.registry.addButton('widgethub_unwrap_btn', {\n        icon: ICONS.arrowUpFromBracket,\n        tooltip: 'Unwrap',\n        onAction: genericAction('unwrap')\n    });\n    editor.ui.registry.addMenuItem('widgethub_unwrap_item', {\n        icon: ICONS.arrowUpFromBracket,\n        text: 'Unwrap',\n        onAction: genericAction('unwrap')\n    });\n    editor.ui.registry.addMenuItem('widgethub_moveup_item', {\n        icon: ICONS.arrowUp,\n        text: 'Move before',\n        onAction: genericAction('movebefore')\n    });\n    editor.ui.registry.addMenuItem('widgethub_movedown_item', {\n        icon: ICONS.arrowDown,\n        text: 'Move after',\n        onAction: genericAction('moveafter')\n    });\n    editor.ui.registry.addMenuItem('widgethub_moveleft_item', {\n        icon: ICONS.arrowLeft,\n        text: 'Move before',\n        onAction: genericAction('movebefore')\n    });\n    editor.ui.registry.addMenuItem('widgethub_moveright_item', {\n        icon: ICONS.arrowRight,\n        text: 'Move after',\n        onAction: genericAction('moveafter')\n    });\n    editor.ui.registry.addMenuItem('widgethub_insertafter_item', {\n        icon: ICONS.clone,\n        text: 'Insert',\n        onAction: genericAction('insertafter')\n    });\n    editor.ui.registry.addMenuItem('widgethub_remove_item', {\n        icon: ICONS.remove,\n        text: 'Remove',\n        onAction: genericAction('remove')\n    });\n\n    // Let extensions to register additional menuItem and nestedMenuItem\n    /** @type {import('./extension/contextmenus').UserDefinedItem[]} */\n    const widgetsWithExtensions = getMenuItemProviders().flatMap(provider => provider(ctx));\n    widgetsWithExtensions.forEach(menuItem => {\n        if (menuItem.subMenuItems) {\n                // It is a nested menu.\n                editor.ui.registry.addNestedMenuItem(`widgethub_${menuItem.name}`, {\n                    icon: menuItem.icon,\n                    text: menuItem.title,\n                    getSubmenuItems: menuItem.subMenuItems\n                });\n            } else {\n                // It is a simple menu item.\n                editor.ui.registry.addMenuItem(`widgethub_${menuItem.name}`, {\n                    icon: menuItem.icon,\n                    text: menuItem.title,\n                    onAction: menuItem.action\n                });\n            }\n    });\n\n    editor.ui.registry.addContextMenu('tiny_widgethub', {\n        /** @param {HTMLElement} element */\n        update: (element) => {\n            console.log(\"ContextMenu update on element\", element);\n            // Look for a context\n            ctx.path = domSrv.findWidgetOnEventPath(widgetList, element);\n            console.log(\"Path found is \", ctx.path);\n            if (!ctx.path?.widget || ctx.path.widget.prop(\"contexttoolbar\")) {\n                // Widget not found in the searchPath or it must be displayed as toolbar\n                return '';\n            }\n            const widget = ctx.path.widget;\n            let menuItems = [];\n            if (hasBindings(widget)) {\n                menuItems.push('modal');\n            }\n            // Now look for contextmenu property in widget definition\n            /** @type {{predicate: string, actions: string}[] | undefined} */\n            let contextmenu = widget.prop(\"contextmenu\");\n            if (contextmenu) {\n                if (!Array.isArray(contextmenu)) {\n                    contextmenu = [contextmenu];\n                }\n                contextmenu.forEach(cm => {\n                    // Does the element matches the predicate?\n                    /** @type {HTMLElement | null} */\n                    let targetElem = null;\n                    if (element.matches(cm.predicate)) {\n                        targetElem = element;\n                    } else {\n                        targetElem = element.closest(cm.predicate);\n                    }\n                    if (!targetElem) {\n                        return;\n                    }\n                    if (ctx.path) {\n                        ctx.path.targetElement = jQuery(targetElem);\n                    }\n                    menuItems.push(...cm.actions.split(' ').map(e => e.trim()));\n                });\n            }\n            menuItems = menuItems.map(e => e === '|' ? '|' : `widgethub_${e}_item`);\n            // Check if the current widget has any action registered by extensions\n            const actionNames = widgetsWithExtensions\n                .filter(e => e.widgetKeys?.includes(widget.key))\n                .map(e => `widgethub_${e.name}`);\n            menuItems.push(...actionNames);\n\n            // Unwrap action always to the end\n            if (widget.unwrap) {\n                menuItems.push('widgethub_unwrap_item');\n            }\n            return menuItems.join(' ');\n        }\n    });\n\n    // Look for widgets that need context toolbar\n    widgetList.filter(widget => needsContextMenu(widget)).forEach(widget => {\n        const items = [];\n        if (hasBindings(widget)) {\n            items.push('modal');\n        }\n        if (widget.unwrap) {\n            items.push('unwrap');\n        }\n        if (widget.prop(\"contexttoolbar\")) {\n            editor.ui.registry.addContextToolbar(`widgethub_ctb_${widget.key}`, {\n                /** @param {HTMLElement} node */\n                predicate: function(node) {\n                    return domSrv.matchesSelectors(node, widget.selectors);\n                },\n                items: items.map(e => `widgethub_${e}_btn`).join(' '),\n                position: 'node'\n            });\n        }\n    });\n}\n"],"names":["editor","ctx","ui","registry","addIcon","ICONS","defineIcons","widgetList","Object","values","domSrv","predefinedActions","unwrap","context","elem","widget","_context$widget","toUnpack","find","text","replaceWith","forEach","listener","movebefore","$e","targetElement","$root","prev","insertAfter","findReferences","$ref","prev2","moveafter","next","insertBefore","next2","insertafter","idMap","smartClone","removeClass","remove","$parent","parent","children","length","predefinedActionsFactory","showPropertiesAction","async","path","findWidgetOnEventPath","selection","getNode","widgetPropertiesCtrl","show","genericAction","name","_ctx$path","_ctx$path2","action","_ctx$path3","addButton","icon","tooltip","onAction","addMenuItem","widgetsWithExtensions","flatMap","provider","menuItem","subMenuItems","addNestedMenuItem","title","getSubmenuItems","addContextMenu","update","element","console","log","_ctx$path4","prop","menuItems","hasBindings","push","contextmenu","Array","isArray","cm","targetElem","matches","predicate","closest","actions","split","map","e","trim","actionNames","filter","widgetKeys","_e$widgetKeys","includes","key","join","needsContextMenu","items","addContextToolbar","node","matchesSelectors","selectors","position","parameters","some","param","undefined","bind"],"mappings":"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"}