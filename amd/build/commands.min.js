define("tiny_widgethub/commands",["exports","editor_tiny/utils","core/str","./uiPick","./common","./options"],(function(_exports,_utils,_str,_uiPick,_common,_options){var obj;
/**
   * Tiny WidgetHub plugin.
   *
   * @module      tiny_widgethub/plugin
   * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=_exports.WidgetPlugin=void 0,_common=(obj=_common)&&obj.__esModule?obj:{default:obj};class WidgetPlugin{editor;#pickCtrl;constructor(editor){this.editor=editor}get pickCtrl(){return this.#pickCtrl||(this.#pickCtrl=new _uiPick.UiPickCtrl(this)),this.#pickCtrl}}_exports.WidgetPlugin=WidgetPlugin;_exports.getSetup=async()=>{const[widgetNameTitle,buttonImage]=await Promise.all([(0,_str.get_string)("settings",_common.default.component),(0,_utils.getButtonImage)("icon",_common.default.component)]);return editor=>{const widgetPlugin=new WidgetPlugin(editor);(0,_options.isPluginVisible)(editor)&&(editor.ui.registry.addIcon(_common.default.icon,buttonImage.html),editor.ui.registry.addButton(_common.default.component,{icon:_common.default.icon,tooltip:widgetNameTitle,onAction:()=>widgetPlugin.pickCtrl.handleAction()}),editor.ui.registry.addMenuItem(_common.default.component,{icon:_common.default.icon,text:widgetNameTitle,onAction:()=>widgetPlugin.pickCtrl.handleAction()}))}}}));

//# sourceMappingURL=commands.min.js.map