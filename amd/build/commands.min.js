define("tiny_widgethub/commands",["exports","editor_tiny/utils","core/str","./common","core/config","./contextinit","./options","jquery","./controller/widgetpicker_ctrl","./extension","./service/userstorage_service","./util"],(function(_exports,_utils,coreStr,_common,cfg,_contextinit,_options,_jquery,_widgetpicker_ctrl,_extension,_userstorage_service,_util){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}
/**
   * Tiny WidgetHub plugin.
   *
   * @module      tiny_widgethub/plugin
   * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0,coreStr=_interopRequireWildcard(coreStr),_common=_interopRequireDefault(_common),cfg=_interopRequireWildcard(cfg),_jquery=_interopRequireDefault(_jquery);_exports.getSetup=async()=>{const[widgetNameTitle,buttonImage]=await Promise.all([coreStr.get_string("settings",_common.default.component),(0,_utils.getButtonImage)("icon",_common.default.component)]);return editor=>{if(!(0,_options.isPluginVisible)(editor))return;if((0,_options.getGlobalConfig)(editor,"disable.plugin.pages","").split(",").includes(_options.Shared.currentScope))return void console.warn("WidgetHub plugin is disabled on this page.");editor.ui.registry.addIcon(_common.default.icon,buttonImage.html);const defaultAction=()=>{(0,_widgetpicker_ctrl.getWidgetPickCtrl)(editor).handleAction()},storage=(0,_userstorage_service.getUserStorage)(editor),widgetsDict=(0,_options.getWidgetDict)(editor);editor.ui.registry.addSplitButton(_common.default.component,{icon:_common.default.icon,tooltip:widgetNameTitle,columns:1,fetch:callback=>{callback(storage.getRecentUsed().map((e=>{var _widgetsDict$e$key;return{type:"choiceitem",text:null===(_widgetsDict$e$key=widgetsDict[e.key])||void 0===_widgetsDict$e$key?void 0:_widgetsDict$e$key.name,value:e.key}})).filter((item=>void 0!==item.text)))},onAction:defaultAction,onItemAction:(api,key)=>{const widgetPickCtrl=(0,_widgetpicker_ctrl.getWidgetPickCtrl)(editor),ctx=storage.getRecentUsed().filter((e=>e.key===key))[0].p;widgetPickCtrl.handlePickModalAction(widgetsDict[key],!0,ctx)}}),editor.ui.registry.addMenuItem(_common.default.component,{icon:_common.default.icon,text:widgetNameTitle,onAction:defaultAction});const autoCompleteTrigger=(0,_options.getGlobalConfig)(editor,"autocomplete.trigger","@");autoCompleteTrigger&&editor.ui.registry.addAutocompleter(_common.default.component+"_autocompleter",{trigger:autoCompleteTrigger,columns:1,minChars:3,fetch:pattern=>{const results=[];return(pattern=>Object.values(widgetsDict).filter((w=>(0,_util.searchComp)(w.name,pattern))))(pattern).forEach((w=>{var _w$prop;const varname=null===(_w$prop=w.prop("autocomplete"))||void 0===_w$prop?void 0:_w$prop.trim(),param=(0,_util.findVariableByName)(varname,w.parameters);null!=param&&param.options?param.options.forEach((opt=>{let value=opt,label=opt;"object"==typeof opt&&(value=opt.v,label=opt.l),results.push({type:"autocompleteitem",value:`${w.key}|${varname}:${value}`,text:w.name+" "+label})})):results.push({type:"autocompleteitem",value:w.key,text:w.name})})),Promise.resolve(results)},onAction:(api,rng,value)=>{api.hide();const pair=value.split("|"),key=pair[0].trim(),ctx={};if(2===pair.length){const[varname,value]=pair[1].split(":");ctx[varname]=value}editor.selection.setRng(rng),editor.insertContent("");(0,_widgetpicker_ctrl.getWidgetPickCtrl)(editor).handlePickModalAction(widgetsDict[key],!0,ctx)}}),function(editor){editor.once("SetContent",(()=>{(editor=>{const requiresFilter=(0,_userstorage_service.getUserStorage)(editor).getFromLocal("startup.filters","").split(",");if(requiresFilter.length>0){const editorOptions=(0,_options.getEditorOptions)(editor),widgetsFound=requiresFilter.map((key=>editorOptions.widgetDict[key])).filter((w=>void 0!==w)),applyWidgetFilter=(0,_util.applyWidgetFilterFactory)(editor,coreStr);widgetsFound.forEach((w=>applyWidgetFilter(w.template??"",!0)));const pageForm=document.querySelector("form.mform");pageForm&&pageForm.querySelector('div[data-fieldtype="editor"]')&&pageForm.addEventListener("submit",(()=>(widgetsFound.forEach((w=>applyWidgetFilter(w.template??"",!0))),!0)))}})(editor),(0,_extension.getListeners)("contentSet").forEach((listener=>listener(editor)))})),editor.on("init",(()=>{const subversion=1,allCss=`${cfg.wwwroot}/theme/styles.php/${cfg.theme}/${cfg.themerev}_${subversion}/all`;editor.dom.loadCSS(allCss);const jQueryVersion=_jquery.default.fn.jquery??"3.6.1",scriptJQ=editor.dom.create("script",{src:`https://code.jquery.com/jquery-${jQueryVersion}.min.js`}),head=editor.getDoc().querySelector("head");scriptJQ.onload=()=>{var _jQuery$fn$tooltip,_jQuery$fn$tooltip$Co;const bsVersion=(null===(_jQuery$fn$tooltip=_jquery.default.fn.tooltip)||void 0===_jQuery$fn$tooltip||null===(_jQuery$fn$tooltip$Co=_jQuery$fn$tooltip.Constructor)||void 0===_jQuery$fn$tooltip$Co?void 0:_jQuery$fn$tooltip$Co.VERSION)??"4.6.2",scriptBS=editor.dom.create("script",{src:`https://cdn.jsdelivr.net/npm/bootstrap@${bsVersion}/dist/js/bootstrap.bundle.min.js`});head.appendChild(scriptBS),scriptBS.onload=()=>{const scriptInitBS=editor.dom.create("script");scriptInitBS.innerHTML="\n                $(document).ready(function() {\n                    $('body').tooltip({\n                        selector: '[data-toggle=\"tooltip\"]',\n                        trigger: 'hover'\n                    });\n                    $('body').popover({\n                        selector: '[data-toggle=\"popover\"]',\n                        trigger: 'hover'\n                    });\n                });",head.appendChild(scriptInitBS)},(0,_extension.getListeners)("onInit").forEach((listener=>listener(editor)));let adminCss=((0,_options.getAdditionalCss)(editor)??"").trim();if(adminCss){const regex=/\/\*{2}\s+(http(s?):\/\/.*)\s+\*{2}\//gm;adminCss=adminCss.replace(regex,((_,$1)=>(editor.dom.loadCSS($1),""))),adminCss.trim()&&editor.dom.addStyle(adminCss)}parseInt((0,_options.getGlobalConfig)(editor,"enable.contextmenu.level","1"))>0&&(0,_contextinit.initContextActions)(editor)},head.appendChild(scriptJQ)}))}(editor)}}}));

//# sourceMappingURL=commands.min.js.map