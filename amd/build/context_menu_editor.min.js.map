{"version":3,"file":"context_menu_editor.min.js","sources":["../src/context_menu_editor.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-bitwise */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pmulet@iedib.net>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {IBContextModal} from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {createControlHTML, getParametersFromForm, applyFieldWatchers} from './uiParams';\nimport {parseBinding} from './util';\n\n// Create a generic editor dialogue class based on editor field of widget definition\nexport default class ContextMenuEditor {\n    /**\n     * @member {ContextMenu} contextMenu\n     * @member {Modal} modal\n     */\n    _contextMenu;\n    modal;\n\n    /**\n     * @param {ContextMenu} contextMenu\n     */\n    constructor(contextMenu) {\n        this._contextMenu = contextMenu;\n    }\n\n    async _init() {\n        const currentContext = this._contextMenu.currentContext;\n        const edSnpt = currentContext.snpt;\n        const editor = this._contextMenu.editor;\n        const hostId = editor.id;\n\n        if (!edSnpt?.hasBindings()) {\n            console.error(\"Invalid genericEditor widget definition \", edSnpt);\n            return;\n        }\n\n        // Create bindings\n        const bindingsDOM = {};\n        // Extract param values from DOM\n        const paramValues = {};\n        edSnpt.parameters.filter(param => param.bind).forEach((param) => {\n            const binding = parseBinding(param.bind, currentContext.elem, typeof (param.value));\n            if (binding) {\n                bindingsDOM[param.name] = binding;\n                paramValues[param.name] = binding.getValue();\n            }\n        });\n        console.log(\"DETECTED FROM DOM PARAMS \", paramValues);\n\n        // Create parameters form controls\n        // Filter only those parameters which have default Values\n        const controls = [];\n        edSnpt.parameters.filter(param => param.bind).forEach((param) => {\n            controls.push(createControlHTML(hostId, param, paramValues[param.name]));\n        });\n        console.log(\"The generated controls are \", controls);\n\n        const data = {\n            name: edSnpt.name,\n            controls: controls\n        };\n\n        // Create the modal\n        this.modal = await ModalFactory.create({\n            type: IBContextModal.TYPE,\n            templateContext: data,\n            large: true,\n        });\n        this.modal.getRoot().on(ModalEvents.hidden, () => {\n            this.modal.destroy();\n        });\n        // Applying watchers to the form elements\n        applyFieldWatchers(this.modal.body, paramValues, edSnpt, false);\n\n        // Bind accept action to modal\n        this.modal.footer.find(\"button.btn-secondary\").on(\"click\", () => {\n            this.modal.destroy();\n        });\n        this.modal.footer.find(\"button.btn-primary\").on(\"click\", () => {\n            const form = this.modal.body.find(\"form\");\n            const updatedValues = getParametersFromForm(edSnpt, form, null);\n            this.modal.destroy();\n            // Set Param Values To DOM\n            Object.keys(bindingsDOM).forEach(key => {\n                bindingsDOM[key].setValue(updatedValues[key]);\n            });\n            editor.focus();\n        });\n        console.log(\"Showing the modal\");\n        this.modal.show();\n    }\n\n    /**\n     * @param {JQuery.Event} evt\n     */\n    show(evt) {\n        evt.preventDefault();\n        this._contextMenu.hide();\n        // Create modal content and actions\n        this._init();\n    }\n}\n"],"names":["constructor","contextMenu","_contextMenu","currentContext","this","edSnpt","snpt","editor","hostId","id","hasBindings","console","error","bindingsDOM","paramValues","parameters","filter","param","bind","forEach","binding","elem","value","name","getValue","log","controls","push","data","modal","ModalFactory","create","type","IBContextModal","TYPE","templateContext","large","getRoot","on","ModalEvents","hidden","destroy","body","footer","find","form","updatedValues","Object","keys","key","setValue","focus","show","evt","preventDefault","hide","_init"],"mappings":"upBA2CIA,YAAYC,mGACHC,aAAeD,gCAIdE,eAAiBC,KAAKF,aAAaC,eACnCE,OAASF,eAAeG,KACxBC,OAASH,KAAKF,aAAaK,OAC3BC,OAASD,OAAOE,MAEjBJ,MAAAA,SAAAA,OAAQK,0BACTC,QAAQC,MAAM,2CAA4CP,cAKxDQ,YAAc,GAEdC,YAAc,GACpBT,OAAOU,WAAWC,QAAOC,OAASA,MAAMC,OAAMC,SAASF,cAC7CG,SAAU,sBAAaH,MAAMC,KAAMf,eAAekB,YAAcJ,MAAMK,OACxEF,UACAP,YAAYI,MAAMM,MAAQH,QAC1BN,YAAYG,MAAMM,MAAQH,QAAQI,eAG1Cb,QAAQc,IAAI,4BAA6BX,mBAInCY,SAAW,GACjBrB,OAAOU,WAAWC,QAAOC,OAASA,MAAMC,OAAMC,SAASF,QACnDS,SAASC,MAAK,+BAAkBnB,OAAQS,MAAOH,YAAYG,MAAMM,WAErEZ,QAAQc,IAAI,8BAA+BC,gBAErCE,KAAO,CACTL,KAAMlB,OAAOkB,KACbG,SAAUA,eAITG,YAAcC,uBAAaC,OAAO,CACnCC,KAAMC,sBAAeC,KACrBC,gBAAiBP,KACjBQ,OAAO,SAENP,MAAMQ,UAAUC,GAAGC,sBAAYC,QAAQ,UACnCX,MAAMY,8CAGIrC,KAAKyB,MAAMa,KAAM5B,YAAaT,QAAQ,QAGpDwB,MAAMc,OAAOC,KAAK,wBAAwBN,GAAG,SAAS,UAClDT,MAAMY,kBAEVZ,MAAMc,OAAOC,KAAK,sBAAsBN,GAAG,SAAS,WAC/CO,KAAOzC,KAAKyB,MAAMa,KAAKE,KAAK,QAC5BE,eAAgB,mCAAsBzC,OAAQwC,KAAM,WACrDhB,MAAMY,UAEXM,OAAOC,KAAKnC,aAAaM,SAAQ8B,MAC7BpC,YAAYoC,KAAKC,SAASJ,cAAcG,SAE5C1C,OAAO4C,WAEXxC,QAAQc,IAAI,0BACPI,MAAMuB,OAMfA,KAAKC,KACDA,IAAIC,sBACCpD,aAAaqD,YAEbC"}