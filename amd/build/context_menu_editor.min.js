define("tiny_widgethub/context_menu_editor",["exports","./modal","core/modal_factory","core/modal_events","./uiParams","./util"],(function(_exports,_modal,_modal_factory,_modal_events,_uiParams,_util){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events);return _exports.default=class{constructor(contextMenu){_defineProperty(this,"_contextMenu",void 0),_defineProperty(this,"modal",void 0),this._contextMenu=contextMenu}async _init(){const currentContext=this._contextMenu.currentContext,edSnpt=currentContext.snpt,editor=this._contextMenu.editor,hostId=editor.id;if(null==edSnpt||!edSnpt.hasBindings())return void console.error("Invalid genericEditor widget definition ",edSnpt);const bindingsDOM={},paramValues={};edSnpt.parameters.filter((param=>param.bind)).forEach((param=>{const binding=(0,_util.parseBinding)(param.bind,currentContext.elem,typeof param.value);binding&&(bindingsDOM[param.name]=binding,paramValues[param.name]=binding.getValue())})),console.log("DETECTED FROM DOM PARAMS ",paramValues);const controls=[];edSnpt.parameters.filter((param=>param.bind)).forEach((param=>{controls.push((0,_uiParams.createControlHTML)(hostId,param,paramValues[param.name]))})),console.log("The generated controls are ",controls);const data={name:edSnpt.name,controls:controls};this.modal=await _modal_factory.default.create({type:_modal.IBContextModal.TYPE,templateContext:data,large:!0}),this.modal.getRoot().on(_modal_events.default.hidden,(()=>{this.modal.destroy()})),(0,_uiParams.applyFieldWatchers)(this.modal.body,paramValues,edSnpt,!1),this.modal.footer.find("button.btn-secondary").on("click",(()=>{this.modal.destroy()})),this.modal.footer.find("button.btn-primary").on("click",(()=>{const form=this.modal.body.find("form"),updatedValues=(0,_uiParams.getParametersFromForm)(edSnpt,form,null);this.modal.destroy(),Object.keys(bindingsDOM).forEach((key=>{bindingsDOM[key].setValue(updatedValues[key])})),editor.focus()})),console.log("Showing the modal"),this.modal.show()}show(evt){evt.preventDefault(),this._contextMenu.hide(),this._init()}},_exports.default}));

//# sourceMappingURL=context_menu_editor.min.js.map