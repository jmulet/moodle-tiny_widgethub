define("tiny_widgethub/options",["exports","editor_tiny/options","./common","./util"],(function(_exports,_options,_common,_util){var obj;
/**
   * Tiny WidgetHub plugin.
   *
   * @module      tiny_widgethub/plugin
   * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.register=_exports.isPluginVisible=_exports.getWidgetDict=_exports.getUserId=_exports.getCourseId=_exports.getAdditionalCss=void 0;const pluginName=(_common=(obj=_common)&&obj.__esModule?obj:{default:obj}).default.pluginName,showPlugin=(0,_options.getPluginOptionName)(pluginName,"showplugin"),userId=(0,_options.getPluginOptionName)(pluginName,"userid"),courseId=(0,_options.getPluginOptionName)(pluginName,"courseid"),widgetList=(0,_options.getPluginOptionName)(pluginName,"widgetlist"),shareStyles=(0,_options.getPluginOptionName)(pluginName,"sharestyles"),additionalCss=(0,_options.getPluginOptionName)(pluginName,"additionalcss");_exports.register=editor=>{const registerOption=editor.options.register;registerOption(showPlugin,{processor:"boolean",default:!0}),registerOption(userId,{processor:"string",default:"-1"}),registerOption(courseId,{processor:"string",default:"-1"}),registerOption(widgetList,{processor:"array",default:[]}),registerOption(shareStyles,{processor:"boolean",default:!0}),registerOption(additionalCss,{processor:"string",default:""})};_exports.isPluginVisible=editor=>editor.options.get(showPlugin);const getUserId=editor=>parseInt(editor.options.get(userId));_exports.getUserId=getUserId;_exports.getCourseId=editor=>parseInt(editor.options.get(courseId));_exports.getAdditionalCss=editor=>editor.options.get(additionalCss);let widgetDict=null;_exports.getWidgetDict=editor=>{if(!widgetDict){widgetDict={};let widgets=editor.options.get(widgetList),partials=widgets.filter((e=>"partials"===e.key))[0];partials&&(widgets=widgets.filter((e=>"partials"!==e.key)));const wrappedWidgets=widgets.map((w=>new _util.WidgetWrapper(w,partials||{}))),userId=getUserId(editor);wrappedWidgets.filter((w=>w.isFor(userId))).forEach((w=>{widgetDict&&(widgetDict[w.key]=w)}))}return widgetDict}}));

//# sourceMappingURL=options.min.js.map