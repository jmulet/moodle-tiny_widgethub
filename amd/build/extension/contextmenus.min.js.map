{"version":3,"file":"contextmenus.min.js","sources":["../../src/extension/contextmenus.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport {registerMenuItemProvider} from \"../extension\";\nimport {convertInt, findVariableByName} from \"../util\";\nimport * as Action from './contextactions';\n\nconst SUPPORTED_LANGS = [\n    {iso: 'ca', title: 'Català'},\n    {iso: 'es', title: 'Castellà'},\n    {iso: 'en', title: 'English'},\n    {iso: 'fr', title: 'Francès'},\n    {iso: 'de', title: 'Alemany'},\n];\n\nconst AVAILABLE_EFFECTS = [\n    {name: 'zoom', title: 'Zoom'},\n    {name: 'lightbox', title: 'Pantalla completa'},\n];\n\nconst SUPPORTED_SIZES = [\n    {v: 'gran', l: 'Gran'},\n    {v: 'mitjana', l: 'Mitjana'},\n    {v: 'petita', l: 'Petita'},\n];\n\n/**\n * @typedef {{type: string, text: string, icon?: string, onAction: (api?: *) => void}} MenuItem\n * @typedef {{name: string, title: string, condition?: string | RegExp | (() => boolean), icon?:string, onAction?: ()=> void, subMenuItems?: () => string | MenuItem[]}} UserDefinedItem\n */\n\n/**\n * @param {import(\"../contextInit\").ItemMenuContext} ctx\n * @returns {UserDefinedItem[]}\n **/\nfunction provider(ctx) {\n    /**\n     * @param {string} title\n     * @param {string} label\n     * @param {*} initialValue\n     * @param {(api: *) => void} onSubmit\n     */\n    const openInputDialog = function(title, label, initialValue, onSubmit) {\n        ctx.editor?.windowManager.open({\n            title,\n            body: {\n              type: 'panel',\n              items: [\n                {\n                  type: 'input',\n                  name: 'value',\n                  label: label\n                }\n              ]\n            },\n            buttons: [\n              {\n                type: 'submit',\n                text: 'Acceptar'\n              }\n            ],\n            initialData: {\n                value: initialValue\n            },\n            onSubmit\n        });\n    };\n\n    /**\n     * @param {import(\"../contextInit\").ItemMenuContext} ctx\n     * @returns {UserDefinedItem}\n     */\n    const imageEffectsNestedMenu = {\n        name: 'imageEffects',\n        condition: 'imatge',\n        title: 'Efectes d\\'imatge',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            if (!elem) {\n                return '';\n            }\n            if (!elem.attr('data-snptd')) {\n                return AVAILABLE_EFFECTS.map(e => ({\n                    type: 'menuitem',\n                    text: e.title,\n                    onAction: Action.addImageEffectAction(ctx, e.name)\n                }));\n            } else {\n                return [{\n                    type: 'menuitem',\n                    icon: 'remove',\n                    text: 'Treure',\n                    onAction: Action.removeImageEffectsAction(ctx)\n                }];\n            }\n        }\n    };\n\n    /**\n     * Converts a raw image into a snippet\n     * @param {import(\"../contextInit\").ItemMenuContext} ctx\n     * @returns {UserDefinedItem}\n     */\n    const imageSwitchToSnippet = {\n        name: 'imageSwitchToSnippet',\n        condition: () => {\n           // We are not inside a widget image and the\n           // selectedElement right clicked must be a tag img\n           const key = ctx.path?.widget?.key;\n           const elem = ctx.path?.selectedElement;\n           const isImg = (key !== undefined && key !== 'imatge' && key !== 'grid-imatge' &&\n            elem?.prop('tagName') === 'IMG');\n           if (ctx.path && isImg && elem?.[0]) {\n                ctx.path.targetElement = elem;\n           }\n           return isImg;\n        },\n        title: 'Convertir a snippet imatge',\n        onAction: Action.imageSwitchToSnippetAction(ctx)\n    };\n\n    /**\n     * @param {import(\"../contextInit\").ItemMenuContext} ctx\n     * @returns {UserDefinedItem}\n     */\n     const changeBoxLanguageNestedMenu = {\n        name: 'changeBoxLanguage',\n        condition: /capsa-.*|tasca-exercici/,\n        title: 'Idioma',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            if (!elem) {\n                return '';\n            }\n            const currentLang = elem.attr('data-lang') ?? '';\n            return SUPPORTED_LANGS.map(({iso, title}) => ({\n                type: 'menuitem',\n                text: title,\n                icon: iso === currentLang ? 'checkmark' : undefined,\n                onAction: Action.changeBoxLangAction(ctx, iso)\n            }));\n        }\n    };\n\n     /**\n      * @param {import(\"../contextInit\").ItemMenuContext} ctx\n      * @returns {UserDefinedItem}\n      */\n     const changeBoxSizeNestedMenu = {\n        name: 'changeBoxSize',\n        condition: /^capsa-.*|^tasca-exercici$/,\n        title: 'Mida',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            const widget = ctx.path?.widget;\n            if (!elem || !widget) {\n                return '';\n            }\n            const sizes = findVariableByName('mida', widget.parameters)?.options;\n            return (sizes || SUPPORTED_SIZES).map((/** @type {*}*/ e) => ({\n                type: 'menuitem',\n                text: e.l ?? e,\n                icon: elem.hasClass('iedib-capsa-' + (e.v ?? e)) ? 'checkmark' : undefined,\n                onAction: Action.changeBoxSizeAction(ctx, e.v ?? e)\n            }));\n        }\n    };\n\n      /**\n       * @param {import(\"../contextInit\").ItemMenuContext} ctx\n       * @returns {UserDefinedItem}\n       */\n      const changeBoxSeverityNestedMenu = {\n        name: 'changeBoxSeverity',\n        condition: 'capsa-generica',\n        title: 'Tipus',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            const widget = ctx.path?.widget;\n            if (!elem || !widget) {\n                return '';\n            }\n            const severities = findVariableByName('tipus', widget.parameters)?.options;\n            return (severities || []).map((/** @type {*}*/ e) => ({\n                type: 'menuitem',\n                text: e.l ?? e,\n                icon: elem.hasClass('iedib-' + (e.v ?? e) + '-border') ? 'checkmark' : undefined,\n                onAction: Action.changeBoxSeverityAction(ctx, e.v ?? e)\n            }));\n        }\n    };\n\n\n     /**\n       * @param {import(\"../contextInit\").ItemMenuContext} ctx\n       * @returns {UserDefinedItem}\n       */\n     const twoColumnsNestedMenu = {\n        name: 'twoColumnsNestedMenu',\n        condition: 'two-cols',\n        title: 'Mida columnes',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            const widget = ctx.path?.widget;\n            if (!elem || !widget) {\n                return '';\n            }\n            /** @type {*} */\n            const menuItems = [{\n                type: 'menuitem',\n                text: \"A una columna\",\n                onAction: Action.changeColumnWidth(ctx, 0)\n            }];\n\n            const firstSpan =\n            (elem.find(\"div:first-child\").attr('class')?.split(' ') ?? [])\n            .filter(c => c.startsWith('span')).map(c => c.replace('span', ''))[0];\n\n            for (let i = 2; i < 12; i = i + 2) {\n                const tpc = parseInt((100 * i / 12.0).toFixed(0));\n                const label = tpc + \"% | \" + (100 - tpc) + \"%\";\n                let isCurrent = firstSpan && convertInt(firstSpan, 0) == i;\n                menuItems.push({\n                    type: 'menuitem',\n                    text: label,\n                    icon: isCurrent ? 'checkmark' : undefined,\n                    onAction: Action.changeColumnWidth(ctx, i)\n                });\n            }\n            return menuItems;\n        }\n    };\n      /**\n       * @param {import(\"../contextInit\").ItemMenuContext} ctx\n       * @returns {UserDefinedItem}\n       */\n      const switchBoxRowsExample = {\n        name: 'switchBoxRowsExample',\n        condition: 'capsa-exemple-cols',\n        title: 'Convertir a exemple 2 files',\n        onAction: Action.switchBoxRowsExampleAction(ctx)\n    };\n\n     /**\n      * @param {import(\"../contextInit\").ItemMenuContext} ctx\n      * @returns {UserDefinedItem}\n      */\n     const switchBoxSimpleExample = {\n        name: 'switchBoxSimpleExample',\n        condition: 'capsa-exemple-rows',\n        title: 'Convertir a exemple simple',\n        onAction: Action.switchBoxSimpleExampleAction(ctx)\n    };\n\n    /**\n     * @param {import(\"../contextInit\").ItemMenuContext} ctx\n     * @returns {UserDefinedItem}\n     */\n    const numberedListNestedMenu = {\n        name: 'numberedListNestedMenu',\n        condition: () => {\n            const selectedElement = ctx.path?.selectedElement;\n            // It must search an OL in the path, probably selectedElement is LI or so!!!!!\n            const target = selectedElement?.closest(\"ol\");\n            if (ctx.path && target?.[0]) {\n                ctx.path.targetElement = target;\n            }\n            return target?.[0] !== undefined;\n        },\n        icon: 'list-num-default',\n        title: 'Llista',\n        subMenuItems: () => {\n            // Determine if the class is there\n            const isBeauty = ctx.path?.targetElement?.hasClass('iedib-falist');\n            return [\n                {\n                    type: 'menuitem',\n                    text: 'Embellit',\n                    icon: isBeauty ? 'checkmark' : undefined,\n                    onAction: () => {\n                        console.log(\"beauty action\");\n                        // Toggle class\n                        const $target = ctx.path?.targetElement;\n                        if (!$target) {\n                            return;\n                        }\n                        $target.toggleClass('iedib-falist');\n                        // Make sure that start and style are in sync\n                        const startAt = $target.attr(\"start\") || \"1\";\n                        if ($target.hasClass('iedib-falist')) {\n                            const beginAt = parseInt(startAt);\n                            $target.css(\"counter-reset\", \"iedibfalist-counter \" + (beginAt - 1));\n                        } else {\n                            $target.css(\"counter-reset\", \"\");\n                        }\n                    }\n                },\n                {\n                    type: 'menuitem',\n                    text: 'Comença a',\n                    onAction: () => {\n                        console.log(\"start at\");\n                        // Get the start property of the list\n                        const startAt1 = ctx.path?.targetElement?.attr(\"start\") ?? \"1\";\n                        // Open input dialog, set the value and retrieve new value\n                        openInputDialog('Comença la numeració a ...', '', startAt1,\n                        (/** @type {*} */ api) => {\n                            api.close();\n                            const $target = ctx.path?.targetElement;\n                            if (!$target) {\n                                return;\n                            }\n                            // Change the number at which start\n                            const startAt2 = api.getData().value ?? \"1\";\n                            const beginAt3 = convertInt(startAt2, 1);\n                            $target.attr(\"start\", beginAt3);\n                            $target.css(\"counter-reset\", \"iedibfalist-counter \" + (beginAt3 - 1));\n                        });\n                    },\n                }\n            ];\n        }\n    };\n\n    /**\n     * @param {import(\"../contextInit\").ItemMenuContext} ctx\n     * @returns {UserDefinedItem}\n     */\n   const accordionIndependentBehaviorNestedMenu = {\n        name: 'accordionIndependentBehavior',\n        condition: 'desplegable2',\n        title: 'Comportament',\n        subMenuItems: () => {\n            const $target = ctx.path?.elem;\n            if (!$target) {\n                return;\n            }\n             // Is Accordion behavior?\n            const isDependentBehavior =\n            ($target.find(\"div.accordion-body\").attr(\"data-parent\") ?? null) !== null;\n\n            // eslint-disable-next-line consistent-return\n            return [false, true].map(opt => ({\n                type: 'menuitem',\n                text: opt ? 'Independents' : 'Dependents',\n                icon: isDependentBehavior === opt ? undefined : 'checkmark',\n                onAction: Action.setAccordionBehavior(ctx, opt)\n            }));\n        }\n    };\n\n\n    /**\n     * @param {import(\"../contextInit\").ItemMenuContext} ctx\n     * @returns {UserDefinedItem}\n     */\n    const tablesMaxWidthMenu = {\n        name: 'tablesMaxWidthMenu',\n        condition: 'taula-predefinida,taula-bs',\n        title: 'Amplada taula',\n        onAction: () => {\n            const $target = ctx.path?.elem;\n            if (!$target) {\n                return;\n            }\n            // Get the initial width\n            const startAt1 = ($target.css(\"max-width\") || \"-1\")\n                .replace(\"px\", \"\").replace(\"none\", \"-1\");\n            console.log(\"startAt1\", startAt1);\n            // Open input dialog, set the value and retrieve new value\n            openInputDialog('Amplada màxima en (px)', '-1=sense limit', startAt1,\n            (/** @type {*} */ api) => {\n                const $target = ctx.path?.elem;\n                if (!$target) {\n                    return;\n                }\n                const maxwidth = convertInt(api.getData().value.replace(\"px\", \"\").trim(), 0);\n                if (maxwidth > 0) {\n                    $target.css(\"max-width\", maxwidth + \"px\");\n                } else {\n                    $target.css(\"max-width\", \"\");\n                }\n                api.close();\n            });\n        },\n    };\n\n    return [\n        // Image actions\n        imageEffectsNestedMenu,\n        imageSwitchToSnippet,\n\n        // Box actions\n        changeBoxLanguageNestedMenu,\n        changeBoxSizeNestedMenu,\n        changeBoxSeverityNestedMenu,\n        switchBoxRowsExample,\n        switchBoxSimpleExample,\n\n        // Others\n        accordionIndependentBehaviorNestedMenu,\n        numberedListNestedMenu,\n        tablesMaxWidthMenu,\n        twoColumnsNestedMenu\n    ];\n}\n\nregisterMenuItemProvider(provider);"],"names":["SUPPORTED_LANGS","iso","title","AVAILABLE_EFFECTS","name","SUPPORTED_SIZES","v","l","ctx","openInputDialog","label","initialValue","onSubmit","editor","windowManager","open","body","type","items","buttons","text","initialData","value","twoColumnsNestedMenu","condition","subMenuItems","elem","path","_ctx$path9","widget","_ctx$path10","menuItems","onAction","Action","changeColumnWidth","firstSpan","find","attr","split","filter","c","startsWith","map","replace","i","tpc","parseInt","toFixed","isCurrent","push","icon","undefined","_ctx$path","removeImageEffectsAction","e","addImageEffectAction","key","_ctx$path2","_ctx$path2$widget","_ctx$path3","selectedElement","isImg","prop","targetElement","imageSwitchToSnippetAction","_ctx$path4","currentLang","_ref","changeBoxLangAction","_ctx$path5","_ctx$path6","parameters","_findVariableByName","options","hasClass","changeBoxSizeAction","_ctx$path7","_ctx$path8","_findVariableByName2","changeBoxSeverityAction","switchBoxRowsExampleAction","switchBoxSimpleExampleAction","$target","_ctx$path16","isDependentBehavior","opt","setAccordionBehavior","_ctx$path11","target","closest","_ctx$path12","_ctx$path12$targetEle","console","log","_ctx$path13","toggleClass","startAt","beginAt","css","startAt1","api","close","_ctx$path15","startAt2","getData","beginAt3","_ctx$path17","_ctx$path18","maxwidth","trim"],"mappings":"qjCAMMA,gBAAkB,CACpB,CAACC,IAAK,KAAMC,MAAO,UACnB,CAACD,IAAK,KAAMC,MAAO,YACnB,CAACD,IAAK,KAAMC,MAAO,WACnB,CAACD,IAAK,KAAMC,MAAO,WACnB,CAACD,IAAK,KAAMC,MAAO,YAGjBC,kBAAoB,CACtB,CAACC,KAAM,OAAQF,MAAO,QACtB,CAACE,KAAM,WAAYF,MAAO,sBAGxBG,gBAAkB,CACpB,CAACC,EAAG,OAAQC,EAAG,QACf,CAACD,EAAG,UAAWC,EAAG,WAClB,CAACD,EAAG,SAAUC,EAAG,6DAYHC,WAORC,gBAAkB,SAASP,MAAOQ,MAAOC,aAAcC,8CACzDJ,IAAIK,2CAAQC,cAAcC,KAAK,CAC3Bb,MAAAA,MACAc,KAAM,CACJC,KAAM,QACNC,MAAO,CACL,CACED,KAAM,QACNb,KAAM,QACNM,MAAOA,SAIbS,QAAS,CACP,CACEF,KAAM,SACNG,KAAM,aAGVC,YAAa,CACTC,MAAOX,cAEXC,SAAAA,YAqIDW,qBAAuB,CAC1BnB,KAAM,uBACNoB,UAAW,WACXtB,MAAO,gBACPuB,aAAc,sDACJC,wBAAOlB,IAAImB,kCAAJC,WAAUF,KACjBG,2BAASrB,IAAImB,mCAAJG,YAAUD,WACpBH,OAASG,aACH,SAGLE,UAAY,CAAC,CACfd,KAAM,WACNG,KAAM,gBACNY,SAAUC,OAAOC,kBAAkB1B,IAAK,KAGtC2B,oCACLT,KAAKU,KAAK,mBAAmBC,KAAK,2DAAUC,MAAM,OAAQ,IAC1DC,QAAOC,GAAKA,EAAEC,WAAW,UAASC,KAAIF,GAAKA,EAAEG,QAAQ,OAAQ,MAAK,OAE9D,IAAIC,EAAI,EAAGA,EAAI,GAAIA,GAAQ,EAAG,OACzBC,IAAMC,UAAU,IAAMF,EAAI,IAAMG,QAAQ,IACxCrC,MAAQmC,IAAM,QAAU,IAAMA,KAAO,QACvCG,UAAYb,YAAa,oBAAWA,UAAW,IAAMS,EACzDb,UAAUkB,KAAK,CACXhC,KAAM,WACNG,KAAMV,MACNwC,KAAMF,UAAY,iBAAcG,EAChCnB,SAAUC,OAAOC,kBAAkB1B,IAAKoC,YAGzCb,kBA8JR,CA3TwB,CAC3B3B,KAAM,eACNoB,UAAW,SACXtB,MAAO,mBACPuB,aAAc,yBACJC,uBAAOlB,IAAImB,iCAAJyB,UAAU1B,YAClBA,KAGAA,KAAKW,KAAK,cAOJ,CAAC,CACJpB,KAAM,WACNiC,KAAM,SACN9B,KAAM,SACNY,SAAUC,OAAOoB,yBAAyB7C,OAVvCL,kBAAkBuC,KAAIY,KACzBrC,KAAM,WACNG,KAAMkC,EAAEpD,MACR8B,SAAUC,OAAOsB,qBAAqB/C,IAAK8C,EAAElD,UAN1C,KAwBU,CACzBA,KAAM,uBACNoB,UAAW,uDAGFgC,uBAAMhD,IAAImB,sDAAJ8B,WAAU5B,2CAAV6B,kBAAkBF,IACxB9B,wBAAOlB,IAAImB,kCAAJgC,WAAUC,gBACjBC,WAAiBV,IAARK,KAA6B,WAARA,KAA4B,gBAARA,KAC7B,SAA1B9B,MAAAA,YAAAA,KAAMoC,KAAK,mBACRtD,IAAImB,MAAQkC,OAAZrD,MAAqBkB,MAAAA,KAAO,KAC3BlB,IAAImB,KAAKoC,cAAgBrC,MAEvBmC,OAEV3D,MAAO,6BACP8B,SAAUC,OAAO+B,2BAA2BxD,MAOX,CACjCJ,KAAM,oBACNoB,UAAW,0BACXtB,MAAO,SACPuB,aAAc,0BACJC,wBAAOlB,IAAImB,kCAAJsC,WAAUvC,SAClBA,WACM,SAELwC,YAAcxC,KAAKW,KAAK,cAAgB,UACvCrC,gBAAgB0C,KAAIyB,WAAClE,IAACA,IAADC,MAAMA,kBAAY,CAC1Ce,KAAM,WACNG,KAAMlB,MACNgD,KAAMjD,MAAQiE,YAAc,iBAAcf,EAC1CnB,SAAUC,OAAOmC,oBAAoB5D,IAAKP,WASrB,CAC7BG,KAAM,gBACNoB,UAAW,6BACXtB,MAAO,OACPuB,aAAc,yDACJC,wBAAOlB,IAAImB,kCAAJ0C,WAAU3C,KACjBG,0BAASrB,IAAImB,kCAAJ2C,WAAUzC,WACpBH,OAASG,aACH,wCAEG,4BAAmB,OAAQA,OAAO0C,kDAAlCC,oBAA+CC,UAC5CpE,iBAAiBqC,KAAqBY,KACnDrC,KAAM,WACNG,KAAMkC,EAAE/C,GAAK+C,EACbJ,KAAMxB,KAAKgD,SAAS,gBAAkBpB,EAAEhD,GAAKgD,IAAM,iBAAcH,EACjEnB,SAAUC,OAAO0C,oBAAoBnE,IAAK8C,EAAEhD,GAAKgD,SASvB,CAClClD,KAAM,oBACNoB,UAAW,iBACXtB,MAAO,QACPuB,aAAc,0DACJC,wBAAOlB,IAAImB,kCAAJiD,WAAUlD,KACjBG,0BAASrB,IAAImB,kCAAJkD,WAAUhD,WACpBH,OAASG,aACH,yCAEQ,4BAAmB,QAASA,OAAO0C,mDAAnCO,qBAAgDL,UAC7C,IAAI/B,KAAqBY,KAC3CrC,KAAM,WACNG,KAAMkC,EAAE/C,GAAK+C,EACbJ,KAAMxB,KAAKgD,SAAS,UAAYpB,EAAEhD,GAAKgD,GAAK,WAAa,iBAAcH,EACvEnB,SAAUC,OAAO8C,wBAAwBvE,IAAK8C,EAAEhD,GAAKgD,SAiDlC,CAC3BlD,KAAM,uBACNoB,UAAW,qBACXtB,MAAO,8BACP8B,SAAUC,OAAO+C,2BAA2BxE,MAOhB,CAC5BJ,KAAM,yBACNoB,UAAW,qBACXtB,MAAO,6BACP8B,SAAUC,OAAOgD,6BAA6BzE,MA6EJ,CAC1CJ,KAAM,+BACNoB,UAAW,eACXtB,MAAO,eACPuB,aAAc,2BACJyD,4BAAU1E,IAAImB,mCAAJwD,YAAUzD,SACrBwD,qBAICE,oBAC+D,QAApEF,QAAQ9C,KAAK,sBAAsBC,KAAK,gBAAkB,YAGpD,EAAC,GAAO,GAAMK,KAAI2C,OACrBpE,KAAM,WACNG,KAAMiE,IAAM,eAAiB,aAC7BnC,KAAMkC,sBAAwBC,SAAMlC,EAAY,YAChDnB,SAAUC,OAAOqD,qBAAqB9E,IAAK6E,WAxFxB,CAC3BjF,KAAM,yBACNoB,UAAW,2BACDoC,oCAAkBpD,IAAImB,mCAAJ4D,YAAU3B,gBAE5B4B,OAAS5B,MAAAA,uBAAAA,gBAAiB6B,QAAQ,aACpCjF,IAAImB,MAAJnB,MAAYgF,QAAAA,OAAS,KACrBhF,IAAImB,KAAKoC,cAAgByB,aAENrC,KAAhBqC,MAAAA,cAAAA,OAAS,KAEpBtC,KAAM,mBACNhD,MAAO,SACPuB,aAAc,iDAGH,CACH,CACIR,KAAM,WACNG,KAAM,WACN8B,0BALS1C,IAAImB,2DAAJ+D,YAAU3B,sDAAV4B,sBAAyBjB,SAAS,iBAK1B,iBAAcvB,EAC/BnB,SAAU,qBACN4D,QAAQC,IAAI,uBAENX,4BAAU1E,IAAImB,mCAAJmE,YAAU/B,kBACrBmB,eAGLA,QAAQa,YAAY,sBAEdC,QAAUd,QAAQ7C,KAAK,UAAY,OACrC6C,QAAQR,SAAS,gBAAiB,OAC5BuB,QAAUnD,SAASkD,SACzBd,QAAQgB,IAAI,gBAAiB,wBAA0BD,QAAU,SAEjEf,QAAQgB,IAAI,gBAAiB,MAIzC,CACIjF,KAAM,WACNG,KAAM,YACNY,SAAU,2CACN4D,QAAQC,IAAI,kBAENM,8BAAW3F,IAAImB,uEAAMoC,4EAAe1B,KAAK,WAAY,IAE3D5B,gBAAgB,6BAA8B,GAAI0F,UAChCC,sBACdA,IAAIC,cACEnB,4BAAU1E,IAAImB,mCAAJ2E,YAAUvC,kBACrBmB,qBAICqB,SAAWH,IAAII,UAAUlF,OAAS,IAClCmF,UAAW,oBAAWF,SAAU,GACtCrB,QAAQ7C,KAAK,QAASoE,UACtBvB,QAAQgB,IAAI,gBAAiB,wBAA0BO,SAAW,YAwC/D,CACvBrG,KAAM,qBACNoB,UAAW,6BACXtB,MAAO,gBACP8B,SAAU,2BACAkD,4BAAU1E,IAAImB,mCAAJ+E,YAAUhF,SACrBwD,qBAICiB,UAAYjB,QAAQgB,IAAI,cAAgB,MACzCvD,QAAQ,KAAM,IAAIA,QAAQ,OAAQ,MACvCiD,QAAQC,IAAI,WAAYM,UAExB1F,gBAAgB,yBAA0B,iBAAkB0F,UAC1CC,4BACRlB,4BAAU1E,IAAImB,mCAAJgF,YAAUjF,SACrBwD,qBAGC0B,UAAW,oBAAWR,IAAII,UAAUlF,MAAMqB,QAAQ,KAAM,IAAIkE,OAAQ,GACtED,SAAW,EACX1B,QAAQgB,IAAI,YAAaU,SAAW,MAEpC1B,QAAQgB,IAAI,YAAa,IAE7BE,IAAIC,aAqBZ9E"}