define("tiny_widgethub/extension/refractor",["../extension","../options","../common","core/str"],(function(_extension,_options,_common,coreStr){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}_common=(obj=_common)&&obj.__esModule?obj:{default:obj},coreStr=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(coreStr);const bs4DataAttributeSuffixes=["toggle","target","parent","ride","slide","slide-to","placement","trigger","content","container","original-title","html"],bs5Selectors=bs4DataAttributeSuffixes.map((suffix=>`[data-${suffix}]`)).join(",");(0,_extension.subscribe)("onInit",(async function(editor){try{const refractoringActive=(0,_options.getGlobalConfig)(editor,"oninit.refractor.bs5","0");let changes=!1;if("1"===refractoringActive&&(changes=function(editor){const body=editor.getBody();let changes=0;return body.querySelectorAll(bs5Selectors).forEach((element=>{bs4DataAttributeSuffixes.forEach((kebabCaseSuffix=>{const oldAttrName=`data-${kebabCaseSuffix}`;if(element.hasAttribute(oldAttrName)){const attrValue=element.getAttribute(oldAttrName),newAttrName=`data-bs-${kebabCaseSuffix}`;null!==attrValue?element.getAttribute(newAttrName)!==attrValue&&(element.setAttribute(newAttrName,attrValue),changes++):(element.removeAttribute(newAttrName),changes++)}}))})),changes>0}(editor)),changes){const saverequired=await coreStr.get_string("saverequired",_common.default.component);editor.notificationManager.open({text:saverequired,type:"warning",timeout:4e3})}}catch(ex){console.error("Error while applying bs5 refractor:",ex)}}))}));

//# sourceMappingURL=refractor.min.js.map