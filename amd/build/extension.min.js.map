{"version":3,"file":"extension.min.js","sources":["../src/extension.js"],"sourcesContent":["/* eslint-disable max-len */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @typedef {{type: string, text: string, icon?: string, onAction: (api?: *) => void}} MenuItem\n * @typedef {{name: string, title: string, condition?: string | RegExp | (() => boolean), icon?: string, onAction?: ()=> void, subMenuItems?: () => (string | MenuItem[])}} UserDefinedItem\n * @typedef {(ctx: import('./contextinit').ItemMenuContext) => UserDefinedItem[]} Provider\n * @typedef {'setup' | 'onInit' | 'contentSet' | 'widgetInserted' | 'widgetRemoved' | 'ctxAction'} EventName\n **/\n\n/** @type {Map<string, ((editor: import('./plugin').TinyMCE, ...args: any[]) => void)[]>}> */\nconst _listeners = new Map();\n\n/** @type {Provider[]} */\nconst _menuItemProviders = [];\n\n/**\n * @param {EventName} eventName\n * @param {(editor: import('./plugin').TinyMCE, ...args: any[]) => void} listener\n */\nexport function subscribe(eventName, listener) {\n    let lst = _listeners.get(eventName);\n    if (!lst) {\n        lst = [];\n        _listeners.set(eventName, lst);\n    }\n    lst.push(listener);\n}\n\n/**\n * @param {EventName} eventName\n * @returns {((editor: import('./plugin').TinyMCE, ...args: any[]) => void)[]}\n */\nexport function getListeners(eventName) {\n    return _listeners.get(eventName) ?? [];\n}\n\n/**\n * @param {Provider} provider\n */\nexport function registerMenuItemProvider(provider) {\n    _menuItemProviders.push(provider);\n}\n\n/**\n * @returns {Provider[]}\n */\nexport function getMenuItemProviders() {\n    return _menuItemProviders;\n}\n"],"names":["eventName","_listeners","get","_menuItemProviders","provider","push","listener","lst","set","Map"],"mappings":"yJAsD6BA,kBAClBC,WAAWC,IAAIF,YAAc,oDAc7BG,+DAR8BC,UACrCD,mBAAmBE,KAAKD,uCArBFJ,UAAWM,cAC7BC,IAAMN,WAAWC,IAAIF,WACpBO,MACDA,IAAM,GACNN,WAAWO,IAAIR,UAAWO,MAE9BA,IAAIF,KAAKC;;;;;;;;MAfPL,WAAa,IAAIQ,IAGjBN,mBAAqB"}