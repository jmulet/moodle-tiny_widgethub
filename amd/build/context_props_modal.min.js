define("tiny_widgethub/context_props_modal",["exports","./modal","core/modal_factory","core/modal_events","./uiParams","./util"],(function(_exports,_modal2,_modal_factory,_modal_events,_uiParams,_util){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classPrivateFieldInitSpec(obj,privateMap,value){!function(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}(obj,privateMap),privateMap.set(obj,value)}function _classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"get"))}function _classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events);var _editor=new WeakMap,_modal=new WeakMap;return _exports.default=class{constructor(editor){_classPrivateFieldInitSpec(this,_editor,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_modal,{writable:!0,value:void 0}),_classPrivateFieldSet(this,_editor,editor)}async show(currentContext){const widget=currentContext.widget,hostId=_classPrivateFieldGet(this,_editor).id,elem=currentContext.elem;if(!elem||null==widget||!widget.hasBindings())return void console.error("Invalid genericEditor widget definition ",widget);const bindingsDOM={},paramValues={};widget.parameters.filter((param=>{var _param$bind;return null===(_param$bind=param.bind)||void 0===_param$bind?void 0:_param$bind.trim()})).forEach((param=>{var _param$bind2;const bindSrc=(null!==(_param$bind2=param.bind)&&void 0!==_param$bind2?_param$bind2:"").trim(),binding=(0,_util.parseBinding)(bindSrc,elem,typeof param.value);binding&&(bindingsDOM[param.name]=binding,paramValues[param.name]=binding.getValue())}));const controls=[];widget.parameters.filter((param=>param.bind)).forEach((param=>{controls.push((0,_uiParams.createControlHTML)(hostId,param,paramValues[param.name]))}));const data={name:widget.name,controls:controls};_classPrivateFieldSet(this,_modal,await _modal_factory.default.create({type:_modal2.IBContextModal.TYPE,templateContext:data,large:!0})),_classPrivateFieldGet(this,_modal).getRoot().on(_modal_events.default.hidden,(()=>{_classPrivateFieldGet(this,_modal).destroy()})),(0,_uiParams.applyFieldWatchers)(_classPrivateFieldGet(this,_modal).body,paramValues,widget,!1),_classPrivateFieldGet(this,_modal).footer.find("button.btn-secondary").on("click",(()=>{_classPrivateFieldGet(this,_modal).destroy()})),_classPrivateFieldGet(this,_modal).footer.find("button.btn-primary").on("click",(()=>{const form=_classPrivateFieldGet(this,_modal).body.find("form"),updatedValues=(0,_uiParams.getParametersFromForm)(widget,form,null);_classPrivateFieldGet(this,_modal).destroy(),Object.keys(bindingsDOM).forEach((key=>{bindingsDOM[key].setValue(updatedValues[key])}))})),_classPrivateFieldGet(this,_modal).show()}close(){_classPrivateFieldGet(this,_modal).destroy()}},_exports.default}));

//# sourceMappingURL=context_props_modal.min.js.map