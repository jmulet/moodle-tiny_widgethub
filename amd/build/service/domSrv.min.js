define("tiny_widgethub/service/domSrv",["exports","jquery"],(function(_exports,_jquery){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.DomSrv=void 0,_exports.getDomSrv=function(){instanceSrv||(instanceSrv=new DomSrv(_jquery.default));return instanceSrv},_jquery=(obj=_jquery)&&obj.__esModule?obj:{default:obj};class DomSrv{constructor(jQuery){this.jQuery=jQuery}treatElementIds($e,$target,$root,idMap){const oldId=$e.prop("id");if(oldId){let newId=idMap[oldId];if(!newId){newId=oldId+Math.random().toString(32).substring(2,5),idMap[oldId]=newId}$e.prop("id",newId)}["data-target","data-bs-target","href"].forEach((dataX=>{const attr=$e.attr(dataX);if(null!=attr&&attr.startsWith("#")){$e.removeClass("active show");const rootRef=$root.find(attr),targetRef=$target.find(attr);if(rootRef.length)if(targetRef.length){const oldId=attr.substring(1);let newId=idMap[oldId];if(!newId){newId=oldId+Math.random().toString(32).substring(2,5),idMap[oldId]=newId}$e.attr(dataX,"#"+newId)}else{const newId="d"+Math.random().toString(32).substring(2),clonedRef=rootRef.clone().prop("id",newId);$e.prop(dataX,"#"+newId),clonedRef.insertAfter(rootRef).removeClass("active show")}}}))}smartClone($e,$root,idMap){const clone=$e.clone();return this.treatElementIds(clone,$e,$root,idMap),clone.find("*").each(((_,e)=>{this.treatElementIds(this.jQuery(e),$e,$root,idMap)})),clone}findReferences($e,$root){const searchFor='[data-target^="#"], [data-bs-target^="#"], [href^="#"]',found=[];if($e.is(searchFor)){let attr=$e.attr("data-target")??$e.attr("data-bs-target")??$e.attr("href");attr&&found.push(...$root.find(attr).toArray())}if(!found.length){const $descendants=$e.find(searchFor);if($descendants.length){let attr=$descendants.attr("data-target")??$descendants.attr("data-bs-target")??$descendants.attr("href");attr&&found.push(...$root.find(attr).toArray())}}return found.map((e=>this.jQuery(e)))}matchesSelectors(elem,selectors){if(!selectors)return!1;let selector,extraQuery=[];Array.isArray(selectors)?(selector=selectors[0],selectors.length>1&&(extraQuery=selectors.slice(1))):selector=selectors;let match=elem.matches(selector);return match&&extraQuery.forEach((e=>{match=match&&null!==elem.querySelector(e)})),match}findWidgetOnEventPath(widgetList,selectedElement){const res={selectedElement:this.jQuery(selectedElement)};let elem=selectedElement;const n=widgetList.length;for(;null!=elem&&null!==elem&&"BODY"!==elem.getAttribute("name")&&void 0===res.widget;){let i=0;for(;i<n&&void 0===res.widget;)this.matchesSelectors(elem,widgetList[i].selectors)&&(res.widget=widgetList[i],res.elem=this.jQuery(elem)),i++;elem=elem.parentElement}if(!res.widget){const parent=res.selectedElement.closest("ol,img");let tag=res.selectedElement.prop("tagName");const isTag="OL"===tag||"IMG"===tag;(isTag||parent[0])&&(isTag||(tag=parent.prop("tagName")),res.widget={key:`!${tag}`,prop:()=>""},res.targetElement=isTag?res.selectedElement:parent)}return res}}let instanceSrv;_exports.DomSrv=DomSrv}));

//# sourceMappingURL=domSrv.min.js.map