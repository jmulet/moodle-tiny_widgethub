define("tiny_widgethub/service/dom_service",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.DomSrv=void 0,_exports.getDomSrv=function(){instanceSrv||(instanceSrv=new DomSrv);return instanceSrv};
/**
   * Tiny WidgetHub plugin.
   *
   * @module      tiny_widgethub/plugin
   * @copyright   2025 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class DomSrv{treatElementIds(el,target,root,idMap){const oldId=el.id;if(oldId){let newId=idMap[oldId];if(!newId){newId=oldId+Math.random().toString(32).substring(2,5),idMap[oldId]=newId}el.id=newId}["data-target","data-bs-target","href"].forEach((dataX=>{const attr=el.getAttribute(dataX);if(null!=attr&&attr.startsWith("#")&&attr.length>1){el.classList.remove("active","show");const rootRef=root.querySelector(attr),targetRef=target.querySelector(attr);if(rootRef)if(targetRef){const oldId=attr.substring(1);let newId=idMap[oldId];if(!newId){newId=oldId+Math.random().toString(32).substring(2,5),idMap[oldId]=newId}el.setAttribute(dataX,"#"+newId)}else{var _rootRef$parentNode;const newId="d"+Math.random().toString(32).substring(2),clonedRef=rootRef.cloneNode(!0);clonedRef.id=newId,el.setAttribute(dataX,"#"+newId),"data-bs-target"===dataX?el.setAttribute("data-target","#"+newId):"data-target"===dataX&&el.setAttribute("data-bs-target","#"+newId),null===(_rootRef$parentNode=rootRef.parentNode)||void 0===_rootRef$parentNode||_rootRef$parentNode.insertBefore(clonedRef,rootRef.nextSibling),clonedRef.classList.remove("active","show")}}}))}smartClone(el,root,idMap){const clone=el.cloneNode(!0);return this.treatElementIds(clone,el,root,idMap),clone.querySelectorAll("*").forEach((e=>{this.treatElementIds(e,el,root,idMap)})),clone}findReferences(el,root){const searchFor='[data-target^="#"], [data-bs-target^="#"], [href^="#"]',found=[];if(el.matches(searchFor)){const attr=el.getAttribute("data-target")??el.getAttribute("data-bs-target")??el.getAttribute("href");attr&&"#"!==attr&&found.push(...root.querySelectorAll(attr))}return found.length||el.querySelectorAll(searchFor).forEach((desc=>{const attr=desc.getAttribute("data-target")??desc.getAttribute("data-bs-target")??desc.getAttribute("href");attr&&"#"!==attr&&found.push(...root.querySelectorAll(attr))})),found}matchesSelectors(elem,selectors){if(!selectors)return!1;let selector,extraQuery=[];Array.isArray(selectors)?(selector=selectors[0],selectors.length>1&&(extraQuery=selectors.slice(1))):selector=selectors;let match=elem.matches(selector);return match&&extraQuery.forEach((e=>{match=match&&null!==elem.querySelector(e)})),match}findWidgetOnEventPath(widgetList,selectedElement){const res={selectedElement:selectedElement};let elem=selectedElement;const n=widgetList.length;for(;null!=elem&&null!==elem&&"BODY"!==elem.getAttribute("name")&&void 0===res.widget;){let i=0;for(;i<n&&void 0===res.widget;)this.matchesSelectors(elem,widgetList[i].selectors)&&(res.widget=widgetList[i],res.elem=elem),i++;elem=elem.parentElement}if(!res.widget){const parent=res.selectedElement.closest("ol,img");let tag=res.selectedElement.tagName;const isTag="OL"===tag||"IMG"===tag;(isTag||parent)&&(isTag||(tag=null==parent?void 0:parent.tagName),res.widget={key:`!${tag}`,prop:()=>""},res.targetElement=isTag?res.selectedElement:parent)}return res}}let instanceSrv;_exports.DomSrv=DomSrv}));

//# sourceMappingURL=dom_service.min.js.map