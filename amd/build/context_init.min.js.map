{"version":3,"file":"context_init.min.js","sources":["../src/context_init.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable max-len */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ContextPropsModal from \"./context_props_modal\";\nimport {getWidgetDict} from \"./options\";\nimport jQuery from 'jquery';\n// eslint-disable-next-line no-unused-vars\nimport {WidgetWrapper} from \"./util\";\n\n/**\n * @param {HTMLElement} elem\n * @param {string | string[]} [selectors]\n * @returns {boolean}\n */\nconst matchesSelectors = function(elem, selectors) {\n    if (!selectors) {\n        return false;\n    }\n    /** @type {string} **/\n    let selector;\n    /** @type {string[]} **/\n    let extraQuery = [];\n    if (Array.isArray(selectors)) {\n        selector = selectors[0];\n        if (selectors.length > 1) {\n            extraQuery = selectors.slice(1);\n        }\n    } else {\n        selector = selectors;\n    }\n    /* @type {boolean} */\n    let match = elem.matches(selector);\n    if (match) {\n        extraQuery.forEach(e => {\n            match = match && elem.querySelector(e) !== null;\n        });\n    }\n    return match;\n};\n\n/**\n * Defines the type PathResult\n * @typedef {Object} PathResult\n * @property {JQuery<HTMLElement>} selectedElement - The DOM element from which the search starts.\n * @property {JQuery<HTMLElement>} [elem] - Indicates the element corresponding to the selector of the widget found\n * @property {JQuery<HTMLElement>} [targetElement] - Indicates the element corresponding the intermediate selector\n * @property {WidgetWrapper=} widget - The current widget definition associated with the elem\n */\n/**\n * Walks the DOM tree up from the selectedElement and tries\n * to find the first element that matches the selector of\n * some widget.\n * @param {WidgetWrapper[]} widgetList - The list of widgets\n * @param {HTMLElement} selectedElement - The starting element in the search\n * @returns {PathResult} The element and widget found in the search.\n */\nconst findWidgetOnEventPath = function(widgetList, selectedElement) {\n    /** @type {PathResult} */\n    const res = {\n        selectedElement: jQuery(selectedElement)\n    };\n    /** @type {HTMLElement | null} */\n    let elem = selectedElement;\n    const n = widgetList.length;\n    while (elem !== null && elem !== undefined && elem !== null &&\n           elem.getAttribute(\"name\") !== \"BODY\" && res.widget === undefined) {\n        let i = 0;\n        while (i < n && res.widget === undefined) {\n            if (matchesSelectors(elem, widgetList[i].selectors)) {\n                res.widget = widgetList[i];\n                res.elem = jQuery(elem);\n            }\n            i++;\n        }\n        elem = elem.parentElement;\n    }\n    return res;\n};\n\n/**\n * @typedef {Object} ICONS\n * @property {string} gear\n * @property {string} arrowUpFromBracket\n */\nconst ICONS = {\n    gear: 'gear',\n    arrowUpFromBracket: 'arrow-up-from-bracket',\n    arrowUp: 'arrow-up',\n    arrowDown: 'arrow-down',\n    remove: 'trash',\n    clone: 'clone'\n};\n\n/**\n * Define icons used in the editor\n * @param {import(\"./plugin\").TinyMCE} editor - The tinyMCE editor instance\n */\nconst defineIcons = function(editor) {\n    editor.ui.registry.addIcon(ICONS.gear, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowUpFromBracket, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M246.6 9.4c-12.5-12.5-32.8-12.5-45.3 0l-128 128c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 109.3 192 320c0 17.7 14.3 32 32 32s32-14.3 32-32l0-210.7 73.4 73.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-128-128zM64 352c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-64z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowUp, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2 160 448c0 17.7 14.3 32 32 32s32-14.3 32-32l0-306.7L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowDown, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.remove, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0L284.2 0c12.1 0 23.2 6.8 28.6 17.7L320 32l96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 96C14.3 96 0 81.7 0 64S14.3 32 32 32l96 0 7.2-14.3zM32 128l384 0 0 320c0 35.3-28.7 64-64 64L96 512c-35.3 0-64-28.7-64-64l0-320zm96 64c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16s16-7.2 16-16l0-224c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16s16-7.2 16-16l0-224c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16s16-7.2 16-16l0-224c0-8.8-7.2-16-16-16z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.clone, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M64 464l224 0c8.8 0 16-7.2 16-16l0-64 48 0 0 64c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 224c0-35.3 28.7-64 64-64l64 0 0 48-64 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zM224 304l224 0c8.8 0 16-7.2 16-16l0-224c0-8.8-7.2-16-16-16L224 48c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zm-64-16l0-224c0-35.3 28.7-64 64-64L448 0c35.3 0 64 28.7 64 64l0 224c0 35.3-28.7 64-64 64l-224 0c-35.3 0-64-28.7-64-64z\"/></svg>');\n};\n\n\n/**\n * Decides if a widget needs some kind of context menu or toolbar\n * @param {WidgetWrapper} widget - The widget\n * @returns {boolean}\n */\nconst needsContextMenu = function(widget) {\n    return widget.hasBindings() || (widget.unwrap ?? '').trim().length > 0;\n};\n\n/**\n * @param {JQuery<HTMLElement>} $e\n * @param {Record<string, string>}  idMap\n */\nconst treatElementIds = function($e, idMap) {\n    const oldId = $e.prop('id');\n    if (oldId) {\n        let newId = idMap[oldId];\n        const done = Object.values(idMap).includes(oldId);\n        if (!done && !newId) {\n            const ext = Math.random().toString(32).substring(2, 4);\n            newId = oldId + ext;\n            idMap[oldId] = newId;\n            $e.prop('id', newId);\n        }\n    }\n    ['data-parent', 'data-bs-parent', 'data-target', 'data-bs-target'].forEach((dataX) => {\n        if ($e.attr(dataX)) {\n            const oldId = $e.attr(dataX)?.substring(1);\n            if (oldId && idMap[oldId]) {\n                $e.attr(dataX, '#' + idMap[oldId]);\n            }\n        }\n    });\n};\n\n/** @type {Record<string, Function>} */\nconst PredefinedActions = {\n    /**\n     * Unwraps the contents of a widget\n     * @param {PathResult} context\n     */\n    unwrap: (context) => {\n        if (!context?.elem || !context?.widget?.unwrap) {\n            return;\n        }\n        const toUnpack = context.elem.find(context.widget.unwrap);\n        context.elem.replaceWith(toUnpack);\n    },\n    /**\n     * Moves the selected element above in the parent container\n     * unless it is the first one\n     * @param {PathResult} context\n    */\n    moveup: (context) => {\n        console.log('moveup', context);\n        const $e = context?.targetElement;\n        if (!$e) {\n            return;\n        }\n        const prev = $e.prev();\n        if (prev) {\n            prev.insertAfter($e);\n        }\n    },\n    /**\n     * Moves the selected element above in the parent container\n     * unless it is the first one\n     * @param {PathResult} context\n    */\n    movedown: (context) => {\n        console.log('movedown', context);\n        const $e = context?.targetElement;\n        if (!$e) {\n            return;\n        }\n        const next = $e.next();\n        if (next) {\n            next.insertBefore($e);\n        }\n    },\n    /**\n     * Inserts a clone of the selected element after it\n     * @param {PathResult} context\n    */\n     insert: (context) => {\n        console.log('insert a clone', context);\n        const $e = context?.targetElement;\n        if (!$e) {\n            return;\n        }\n        const clone = $e.clone();\n        // old - new id map\n        /** @type {Record<string, string>} */\n        const idMap = {};\n        // Run twice\n        for (let i = 0; i < 2; i++) {\n            treatElementIds(clone, idMap);\n            clone.find('*').each((_, e) => {\n                treatElementIds(jQuery(e), idMap);\n            });\n        }\n        clone.insertAfter($e);\n    },\n    /**\n     * Removes the selected element\n     * @param {PathResult} context\n    */\n    remove: (context) => {\n        console.log('remove', context);\n        const $e = context?.targetElement;\n        if (!$e) {\n            return;\n        }\n        $e.remove();\n    }\n};\n\n/**\n * Looks for widgets that need to display context toolbars or menus\n * and binds the corresponding actions.\n * @param {import(\"./plugin\").TinyMCE} editor\n */\nexport const initContextActions = function(editor) {\n    /** @type {WidgetWrapper[]} */\n    const widgetList = Object.values(getWidgetDict(editor));\n\n    // Define icons\n    defineIcons(editor);\n\n    // Keep track of the last found context\n    /** @type {PathResult | undefined} */\n    let currentContext;\n\n    const contextPropsModal = new ContextPropsModal(editor);\n    // Generic button action for opening the properties modal\n    editor.ui.registry.addButton('widgethub_modal_btn', {\n        icon: ICONS.gear,\n        tooltip: 'Properties',\n        onAction: async function() {\n            const ctx = findWidgetOnEventPath(widgetList, editor.selection.getNode());\n            if (!ctx.widget) {\n                return;\n            }\n            // Display modal dialog on this context\n            await contextPropsModal.show(ctx);\n        }\n    });\n    editor.ui.registry.addMenuItem('widgethub_modal_item', {\n        icon: ICONS.gear,\n        text: 'Properties',\n        onAction: async function() {\n            if (!currentContext?.widget) {\n                currentContext = findWidgetOnEventPath(widgetList, editor.selection.getNode());\n                if (!currentContext.widget) {\n                    return;\n                }\n            }\n            // Display modal dialog on this context\n            await contextPropsModal.show(currentContext);\n    }\n    });\n\n    /**\n     * @param {string} name\n     */\n    function genericAction(name) {\n        return function() {\n            if (!currentContext?.widget) {\n                currentContext = findWidgetOnEventPath(widgetList, editor.selection.getNode());\n                if (!currentContext.widget) {\n                    return;\n                }\n            }\n            PredefinedActions[name](currentContext);\n        };\n    }\n\n    // Generic button action for unwrapping those widgets that support this feature\n    editor.ui.registry.addButton('widgethub_unwrap_btn', {\n        icon: ICONS.arrowUpFromBracket,\n        tooltip: 'Unwrap',\n        onAction: genericAction('unwrap')\n    });\n\n    editor.ui.registry.addMenuItem('widgethub_unwrap_item', {\n        icon: ICONS.arrowUpFromBracket,\n        text: 'Unwrap',\n        onAction: genericAction('unwrap')\n    });\n    editor.ui.registry.addMenuItem('widgethub_moveup_item', {\n        icon: ICONS.arrowUp,\n        text: 'Move up',\n        onAction: genericAction('moveup')\n    });\n    editor.ui.registry.addMenuItem('widgethub_movedown_item', {\n        icon: ICONS.arrowDown,\n        text: 'Move down',\n        onAction: genericAction('movedown')\n    });\n    editor.ui.registry.addMenuItem('widgethub_insertafter_item', {\n        icon: ICONS.clone,\n        text: 'Insert',\n        onAction: genericAction('insert')\n    });\n    editor.ui.registry.addMenuItem('widgethub_remove_item', {\n        icon: ICONS.remove,\n        text: 'Remove',\n        onAction: genericAction('remove')\n    });\n\n    console.log(\"Registry addContextMenu\");\n    editor.ui.registry.addContextMenu('tiny_widgethub', {\n        /** @param {HTMLElement} element */\n        update: (element) => {\n            console.log(\"update contextmenu \", element);\n            // Look for a context\n            currentContext = findWidgetOnEventPath(widgetList, element);\n            if (!currentContext.widget || currentContext.widget.prop('contexttoolbar')) {\n                return '';\n            }\n            const widget = currentContext.widget;\n            const menuItems = [];\n            if (widget.hasBindings()) {\n                menuItems.push('modal');\n            }\n            // Now look for contextmenu property in widget definition\n            /** @type {{predicate: string, actions: string}[] | undefined} */\n            const contextmenu = widget.prop('contextmenu');\n            if (contextmenu) {\n                contextmenu.forEach(cm => {\n                    // Does the element matches the predicate?\n                    /** @type {HTMLElement | null} */\n                    let targetElem = null;\n                    if (element.matches(cm.predicate)) {\n                        targetElem = element;\n                    } else {\n                        targetElem = element.closest(cm.predicate);\n                    }\n                    if (!targetElem) {\n                        return;\n                    }\n                    if (currentContext) {\n                        currentContext.targetElement = jQuery(targetElem);\n                    }\n                    menuItems.push(...cm.actions.split(\" \").map(e => e.trim()));\n                });\n            }\n            if (widget.unwrap) {\n                menuItems.push('unwrap');\n            }\n            return menuItems.map(e => e === '|' ? '|' : `widgethub_${e}_item`).join(' ');\n        }\n    });\n\n    // Look for widgets that need context toolbar or menu\n    widgetList.filter(widget => needsContextMenu(widget)).forEach(widget => {\n        const items = [];\n        if (widget.hasBindings()) {\n            items.push('modal');\n        }\n        if (widget.unwrap) {\n            items.push('unwrap');\n        }\n        if (widget.prop('contexttoolbar')) {\n            editor.ui.registry.addContextToolbar(`widgethub_ctb_${widget.key}`, {\n                /** @param {HTMLElement} node */\n                predicate: function(node) {\n                    return matchesSelectors(node, widget.selectors);\n                },\n                items: items.map(e => `widgethub_${e}_btn`).join(' '),\n                position: 'node'\n            });\n        }\n    });\n\n\n    // Dump all information\n    console.log(\"All ui registries-->\", editor.ui.registry.getAll());\n};"],"names":["matchesSelectors","elem","selectors","selector","extraQuery","Array","isArray","length","slice","match","matches","forEach","e","querySelector","findWidgetOnEventPath","widgetList","selectedElement","res","n","getAttribute","undefined","widget","i","parentElement","ICONS","treatElementIds","$e","idMap","oldId","prop","newId","Object","values","includes","Math","random","toString","substring","dataX","attr","_$e$attr","PredefinedActions","unwrap","context","_context$widget","toUnpack","find","replaceWith","moveup","console","log","targetElement","prev","insertAfter","movedown","next","insertBefore","insert","clone","each","_","remove","editor","currentContext","ui","registry","addIcon","defineIcons","contextPropsModal","ContextPropsModal","genericAction","name","_currentContext2","selection","getNode","addButton","icon","tooltip","onAction","async","ctx","show","addMenuItem","text","_currentContext","addContextMenu","update","element","menuItems","hasBindings","push","contextmenu","cm","targetElem","predicate","closest","actions","split","map","trim","join","filter","needsContextMenu","items","addContextToolbar","key","node","position","getAll"],"mappings":"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"}