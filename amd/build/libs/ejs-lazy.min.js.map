{"version":3,"file":"ejs-lazy.min.js","sources":["../../src/libs/ejs-lazy.js"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n * An adaptation of the EJS templating engine as AMD module.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\nconst utils = {};\n(function(mod) {\n    'use strict';\n    const regExpChars = /[|\\\\{}()[\\]^$+*?.]/g;\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n    const hasOwn = function(obj, key) {\n return hasOwnProperty.apply(obj, [key]);\n};\n\n    /**\n     * Escape characters reserved in regular expressions.\n     *\n     * If `string` is `undefined` or `null`, the empty string is returned.\n     *\n     * @param {String} string Input string\n     * @return {String} Escaped string\n     * @static\n     * @private\n     */\n    mod.escapeRegExpChars = function(string) {\n        // istanbul ignore if\n        if (!string) {\n            return '';\n        }\n        return String(string).replace(regExpChars, '\\\\$&');\n    };\n\n    const _ENCODE_HTML_RULES = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&#34;',\n        \"'\": '&#39;'\n    };\n    const _MATCH_HTML = /[&<>'\"]/g;\n\n    /**\n     *\n     * @param {string} c\n     * @returns {string} encoded char\n     */\n    function encode_char(c) {\n        return _ENCODE_HTML_RULES[c] || c;\n    }\n\n    /**\n     * Stringified version of constants used by {@link module:utils.escapeXML}.\n     *\n     * It is used in the process of generating {@link ClientFunction}s.\n     *\n     * @readonly\n     * @type {String}\n     */\n\n    const escapeFuncStr =\n        'var _ENCODE_HTML_RULES = {\\n'\n        + '      \"&\": \"&amp;\"\\n'\n        + '    , \"<\": \"&lt;\"\\n'\n        + '    , \">\": \"&gt;\"\\n'\n        + '    , \\'\"\\': \"&#34;\"\\n'\n        + '    , \"\\'\": \"&#39;\"\\n'\n        + '    }\\n'\n        + '  , _MATCH_HTML = /[&<>\\'\"]/g;\\n'\n        + 'function encode_char(c) {\\n'\n        + '  return _ENCODE_HTML_RULES[c] || c;\\n'\n        + '};\\n';\n\n    /**\n     * Escape characters reserved in XML.\n     *\n     * If `markup` is `undefined` or `null`, the empty string is returned.\n     *\n     * @param {String} markup Input string\n     * @return {String} Escaped string\n     * @static\n     * @private\n     */\n    mod.escapeXML = function(markup) {\n        return markup == undefined\n            ? ''\n            : String(markup)\n                .replace(_MATCH_HTML, encode_char);\n    };\n\n    /**\n     * Naive copy of properties from one object to another.\n     * Does not recurse into non-scalar properties\n     */\n    function escapeXMLToString() {\n        return Function.prototype.toString.call(this) + ';\\n' + escapeFuncStr;\n    }\n\n    try {\n        if (typeof Object.defineProperty === 'function') {\n            // If the Function prototype is frozen, the \"toString\" property is non-writable.\n            // This means that any objects which inherit this property\n            // cannot have the property changed using an assignment. If using strict mode,\n            // attempting that will cause an error. If not using strict\n            // mode, attempting that will be silently ignored.\n            // However, we can still explicitly shadow the prototype's \"toString\" property by\n            // defining a new \"toString\" property on this object.\n            Object.defineProperty(mod.escapeXML, 'toString', {value: escapeXMLToString});\n        } else {\n            // If Object.defineProperty() doesn't exist, attempt to shadow this property using the assignment operator.\n            mod.escapeXML.toString = escapeXMLToString;\n        }\n    } catch (err) {\n        console.warn('Unable to set escapeXML.toString (is the Function prototype frozen?)');\n    }\n\n    /**\n     * Naive copy of properties from one object to another.\n     * Does not recurse into non-scalar properties\n     * Does not check to see if the property has a value before copying\n     *\n     * @param  {Object} to   Destination object\n     * @param  {Object} from Source object\n     * @return {Object}      Destination object\n     * @static\n     * @private\n     */\n    mod.shallowCopy = function(to, from) {\n        from = from || {};\n        if ((to !== null) && (to !== undefined)) {\n            for (let p in from) {\n                if (!hasOwn(from, p)) {\n                    continue;\n                }\n                if (p === '__proto__' || p === 'constructor') {\n                    continue;\n                }\n                to[p] = from[p];\n            }\n        }\n        return to;\n    };\n\n    /**\n     * Naive copy of a list of key names, from one object to another.\n     * Only copies property if it is actually defined\n     * Does not recurse into non-scalar properties\n     *\n     * @param  {Object} to   Destination object\n     * @param  {Object} from Source object\n     * @param  {Array} list List of properties to copy\n     * @return {Object}      Destination object\n     * @static\n     * @private\n     */\n    mod.shallowCopyFromList = function(to, from, list) {\n        list = list || [];\n        from = from || {};\n        if ((to !== null) && (to !== undefined)) {\n            for (let i = 0; i < list.length; i++) {\n                const p = list[i];\n                if (typeof from[p] != 'undefined') {\n                    if (!hasOwn(from, p)) {\n                        continue;\n                    }\n                    if (p === '__proto__' || p === 'constructor') {\n                        continue;\n                    }\n                    to[p] = from[p];\n                }\n            }\n        }\n        return to;\n    };\n\n    /**\n     * Simple in-process cache implementation. Does not implement limits of any\n     * sort.\n     *\n     * @implements {Cache}\n     * @static\n     * @private\n     */\n    mod.cache = {\n        _data: {},\n        set: function(key, val) {\n            this._data[key] = val;\n        },\n        get: function(key) {\n            return this._data[key];\n        },\n        remove: function(key) {\n            delete this._data[key];\n        },\n        reset: function() {\n            this._data = {};\n        }\n    };\n\n    /**\n     * Transforms hyphen case variable into camel case.\n     *\n     * @param {String} str Hyphen case string\n     * @return {String} Camel case string\n     * @static\n     * @private\n     */\n    mod.hyphenToCamel = function(str) {\n        return str.replace(/-[a-z]/g, function(match) {\n return match[1].toUpperCase();\n});\n    };\n\n    /**\n     * Returns a null-prototype object in runtimes that support it\n     *\n     * @return {Object} Object, prototype will be set to null where possible\n     * @static\n     * @private\n     */\n    mod.createNullProtoObjWherePossible = (function() {\n        if (typeof Object.create == 'function') {\n            return function() {\n                return Object.create(null);\n            };\n        }\n        if (!({__proto__: null} instanceof Object)) {\n            return function() {\n                return {__proto__: null};\n            };\n        }\n        // Not possible, just pass through\n        return function() {\n            return {};\n        };\n    })();\n\n    /**\n     * Copies own-properties from one object to a null-prototype object for basic\n     * protection against prototype pollution\n     *\n     * @param {Object} obj to copy properties from\n     * @return {Object} Object with own-properties of input object\n     * @static\n     * @private\n     */\n    mod.hasOwnOnlyObject = function(obj) {\n        const o = mod.createNullProtoObjWherePossible();\n        for (let p in obj) {\n            if (hasOwn(obj, p)) {\n                o[p] = obj[p];\n            }\n        }\n        return o;\n    };\n\n})(utils);\n\n/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n/**\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n * @author Matthew Eernisse <mde@fleegix.org>\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n * @project EJS\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n */\n\n/**\n * EJS internal functions.\n *\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\n * the sake of organization all the private functions re grouped into this\n * module.\n *\n * @module ejs-internal\n * @private\n */\n\n/**\n * Embedded JavaScript templating engine.\n *\n * @module ejs\n * @public\n */\nconst EJS = {};\nconst path = {\n    // Mocked path module\n};\n\nlet scopeOptionWarned = false;\n/** @type {string} */\nconst _VERSION_STRING = '3.1.10';\nconst _DEFAULT_OPEN_DELIMITER = '<';\nconst _DEFAULT_CLOSE_DELIMITER = '>';\nconst _DEFAULT_DELIMITER = '%';\nconst _DEFAULT_LOCALS_NAME = 'locals';\nconst _NAME = 'ejs';\nconst _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\nconst _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug',\n    'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async'];\nconst _JS_IDENTIFIER = /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;\n\n/**\n * EJS template function cache. This can be a LRU object from lru-cache NPM\n * module. By default, it is {@link module:utils.cache}, a simple in-process\n * cache that grows continuously.\n *\n * @type {Cache}\n */\n\nEJS.cache = utils.cache;\n\n/**\n * Name of the object containing the locals.\n *\n * This variable is overridden by {@link Options}`.localsName` if it is not\n * `undefined`.\n *\n * @type {String}\n * @public\n */\n\nEJS.localsName = _DEFAULT_LOCALS_NAME;\n\n/**\n * Promise implementation -- defaults to the native implementation if available\n * This is mostly just for testability\n *\n * @type {PromiseConstructorLike}\n * @public\n */\n\nEJS.promiseImpl = (new Function('return this;'))().Promise;\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `template` is not set, the file specified in `options.filename` will be\n * read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @memberof module:ejs-internal\n * @param {Options} options   compilation options\n * @param {String} [template] template source\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned.\n * @static\n */\n\n/**\n *\n * @param {Option} options\n * @param {String} template\n */\nfunction handleCache(options, template) {\n    let func;\n    const filename = options.filename;\n    const hasTemplate = arguments.length > 1;\n    if (!hasTemplate) {\n        throw new Error('Internal EJS error: a template must be provided');\n    }\n\n    if (options.cache) {\n        if (!filename) {\n            throw new Error('cache option requires a filename');\n        }\n        func = EJS.cache.get(filename);\n        if (func) {\n            return func;\n        }\n    }\n    func = EJS.compile(template, options);\n    if (options.cache) {\n        EJS.cache.set(filename, func);\n    }\n    return func;\n}\n\n\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned\n * @static\n */\nfunction includeFile(path, options) {\n    const opts = utils.shallowCopy(utils.createNullProtoObjWherePossible(), options);\n    opts.filename = path + \"/\" + options.filename;\n    if (typeof options.includer === 'function') {\n      const includerResult = options.includer(path, opts.filename);\n      if (includerResult) {\n        if (includerResult.filename) {\n          opts.filename = includerResult.filename;\n        }\n        if (includerResult.template) {\n          return handleCache(opts, includerResult.template);\n        }\n      }\n    }\n    return handleCache(opts);\n }\n\n/**\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\n * `lineno`.\n *\n * @memberof module:ejs-internal\n * @param {Error}  err      Error object\n * @param {String} str      EJS source\n * @param {String} flnm     file name of the EJS file\n * @param {Number} lineno   line number of the error\n * @param {EscapeCallback} esc\n * @static\n */\nfunction rethrow(err, str, flnm, lineno, esc) {\n    const lines = str.split('\\n');\n    const start = Math.max(lineno - 3, 0);\n    const end = Math.min(lines.length, lineno + 3);\n    const filename = esc(flnm);\n    // Error context\n    const context = lines.slice(start, end).map(function(line, i) {\n        const curr = i + start + 1;\n        return (curr == lineno ? ' >> ' : '    ')\n            + curr\n            + '| '\n            + line;\n    }).join('\\n');\n\n    // Alter exception message\n    err.path = filename;\n    err.message = (filename || 'ejs') + ':'\n        + lineno + '\\n'\n        + context + '\\n\\n'\n        + err.message;\n\n    throw err;\n}\n\n/**\n *\n * @param {string} str\n */\nfunction stripSemi(str) {\n    return str.replace(/;(\\s*$)/, '$1');\n}\n\n/**\n * Compile the given `str` of ejs into a template function.\n *\n * @param {String}  template EJS template\n *\n * @param {Options} [opts] compilation options\n *\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `opts.client`, either type might be returned.\n * Note that the return type of the function also depends on the value of `opts.async`.\n * @public\n */\n\nEJS.compile = function compile(template, opts) {\n    let templ;\n\n    // V1 compat\n    // 'scope' is 'context'\n    // Remove this in a future version\n    if (opts?.scope) {\n        if (!scopeOptionWarned) {\n            console.warn('`scope` option is deprecated and will be removed in EJS 3');\n            scopeOptionWarned = true;\n        }\n        if (!opts.context) {\n            opts.context = opts.scope;\n        }\n        delete opts.scope;\n    }\n    templ = new Template(template, opts);\n    return templ.compile();\n};\n\n/**\n * Render the given `template` of ejs.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}   template EJS template\n * @param {Object}  [data={}] template data\n * @param {Options} [opts={}] compilation and rendering options\n * @return {(String|Promise<String>)}\n * Return value type depends on `opts.async`.\n * @public\n */\n\nEJS.render = function(template, d, o) {\n    const data = d || utils.createNullProtoObjWherePossible();\n    const opts = o || utils.createNullProtoObjWherePossible();\n\n    // No options object -- if there are optiony names\n    // in the data, copy them to options\n    if (arguments.length == 2) {\n        utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\n    }\n\n    return handleCache(opts, template)(data);\n};\n\n/**\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\n * @public\n */\n\n/**\n * EJS template class\n * @public\n */\nEJS.Template = Template;\n\nEJS.clearCache = function() {\n    EJS.cache.reset();\n};\n\n/**\n *\n * @param {String} text\n * @param {Object} optsParam\n */\nfunction Template(text, optsParam) {\n    const opts = utils.hasOwnOnlyObject(optsParam);\n    const options = utils.createNullProtoObjWherePossible();\n    this.templateText = text;\n    /** @type {string | null} */\n    this.mode = null;\n    this.truncate = false;\n    this.currentLine = 1;\n    this.source = '';\n    options.client = opts.client || false;\n    options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\n    options.compileDebug = opts.compileDebug !== false;\n    options.debug = !!opts.debug;\n    options.filename = opts.filename;\n    options.openDelimiter = opts.openDelimiter || EJS.openDelimiter || _DEFAULT_OPEN_DELIMITER;\n    options.closeDelimiter = opts.closeDelimiter || EJS.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\n    options.delimiter = opts.delimiter || EJS.delimiter || _DEFAULT_DELIMITER;\n    options.strict = opts.strict || false;\n    options.context = opts.context;\n    options.cache = opts.cache || false;\n    options.rmWhitespace = opts.rmWhitespace;\n    options.root = opts.root;\n    options.includer = opts.includer;\n    options.outputFunctionName = opts.outputFunctionName;\n    options.localsName = opts.localsName || EJS.localsName || _DEFAULT_LOCALS_NAME;\n    options.views = opts.views;\n    options.async = opts.async;\n    options.destructuredLocals = opts.destructuredLocals;\n    options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\n\n    if (options.strict) {\n        options._with = false;\n    } else {\n        options._with = typeof opts._with != 'undefined' ? opts._with : true;\n    }\n\n    this.opts = options;\n\n    this.regex = this.createRegex();\n}\n\nTemplate.modes = {\n    EVAL: 'eval',\n    ESCAPED: 'escaped',\n    RAW: 'raw',\n    COMMENT: 'comment',\n    LITERAL: 'literal'\n};\n\nTemplate.prototype = {\n    createRegex: function() {\n        let str = _REGEX_STRING;\n        const delim = utils.escapeRegExpChars(this.opts.delimiter);\n        const open = utils.escapeRegExpChars(this.opts.openDelimiter);\n        const close = utils.escapeRegExpChars(this.opts.closeDelimiter);\n        str = str.replace(/%/g, delim)\n            .replace(/</g, open)\n            .replace(/>/g, close);\n        return new RegExp(str);\n    },\n\n    compile: function() {\n        /** @type {string} */\n        let src;\n        /** @type {ClientFunction} */\n        let fn;\n        const opts = this.opts;\n        let prepended = '';\n        let appended = '';\n        /** @type {EscapeCallback} */\n        const escapeFn = opts.escapeFunction;\n        /** @type {FunctionConstructor} */\n        let Ctor;\n        /** @type {string} */\n        const sanitizedFilename = opts.filename ? JSON.stringify(opts.filename) : 'undefined';\n\n        if (!this.source) {\n            this.generateSource();\n            prepended +=\n                '  var __output = \"\";\\n' +\n                '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\n            if (opts.outputFunctionName) {\n                if (!_JS_IDENTIFIER.test(opts.outputFunctionName)) {\n                    throw new Error('outputFunctionName is not a valid JS identifier.');\n                }\n                prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\n            }\n            if (opts.localsName && !_JS_IDENTIFIER.test(opts.localsName)) {\n                throw new Error('localsName is not a valid JS identifier.');\n            }\n            if (opts.destructuredLocals?.length) {\n                let destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\n                for (let i = 0; i < opts.destructuredLocals.length; i++) {\n                    const name = opts.destructuredLocals[i];\n                    if (!_JS_IDENTIFIER.test(name)) {\n                        throw new Error('destructuredLocals[' + i + '] is not a valid JS identifier.');\n                    }\n                    if (i > 0) {\n                        destructuring += ',\\n  ';\n                    }\n                    destructuring += name + ' = __locals.' + name;\n                }\n                prepended += destructuring + ';\\n';\n            }\n            if (opts._with !== false) {\n                prepended += '  with (' + opts.localsName + ' || {}) {' + '\\n';\n                appended += '  }' + '\\n';\n            }\n            appended += '  return __output;' + '\\n';\n            this.source = prepended + this.source + appended;\n        }\n\n        if (opts.compileDebug) {\n            src = 'var __line = 1' + '\\n'\n                + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n'\n                + '  , __filename = ' + sanitizedFilename + ';' + '\\n'\n                + 'try {' + '\\n'\n                + this.source\n                + '} catch (e) {' + '\\n'\n                + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\n                + '}' + '\\n';\n        } else {\n            src = this.source;\n        }\n\n        if (opts.client) {\n            src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\n            if (opts.compileDebug) {\n                src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\n            }\n        }\n\n        if (opts.strict) {\n            src = '\"use strict\";\\n' + src;\n        }\n        if (opts.debug) {\n            console.log(src);\n        }\n        if (opts.compileDebug && opts.filename) {\n            src = src + '\\n'\n                + '//# sourceURL=' + sanitizedFilename + '\\n';\n        }\n\n        try {\n            if (opts.async) {\n                // Have to use generated function for this, since in envs without support,\n                // it breaks in parsing\n                try {\n                    Ctor = (new Function('return (async function(){}).constructor;'))();\n                } catch (e) {\n                    if (e instanceof SyntaxError) {\n                        throw new Error('This environment does not support async/await');\n                    } else {\n                        throw e;\n                    }\n                }\n            } else {\n                Ctor = Function;\n            }\n            fn = new Ctor(opts.localsName + ', escapeFn, include, rethrow', src);\n        } catch (e) {\n            // istanbul ignore else\n            if (e instanceof SyntaxError) {\n                if (opts.filename) {\n                    e.message += ' in ' + opts.filename;\n                }\n                e.message += ' while compiling ejs\\n\\n';\n                e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\n                e.message += 'https://github.com/RyanZim/EJS-Lint';\n                if (!opts.async) {\n                    e.message += '\\n';\n                    e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\n                }\n            }\n            throw e;\n        }\n\n        // Return a callable function which will execute the function\n        // created by the source-code, with the passed data as locals\n        // Adds a local `include` function which allows full recursive include\n        const returnedFn = opts.client ? fn : function anonymous(data) {\n            const include = function(path, includeData) {\n                let d = utils.shallowCopy(utils.createNullProtoObjWherePossible(), data);\n                if (includeData) {\n                    d = utils.shallowCopy(d, includeData);\n                }\n                return includeFile(path, opts)(d);\n            };\n            return fn.apply(opts.context,\n                [data || utils.createNullProtoObjWherePossible(), escapeFn, include, rethrow]);\n        };\n        if (opts.filename && typeof Object.defineProperty === 'function') {\n            const filename = opts.filename;\n            const basename = path.basename(filename, path.extname(filename));\n            try {\n                Object.defineProperty(returnedFn, 'name', {\n                    value: basename,\n                    writable: false,\n                    enumerable: false,\n                    configurable: true\n                });\n            } catch (e) { /* Ignore */ }\n        }\n        return returnedFn;\n    },\n\n    generateSource: function() {\n        const opts = this.opts;\n\n        if (opts.rmWhitespace) {\n            // Have to use two separate replace here as `^` and `$` operators don't\n            // work well with `\\r` and empty lines don't work well with the `m` flag.\n            this.templateText =\n                this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\n        }\n\n        // Slurp spaces and tabs before <%_ and after _%>\n        this.templateText =\n            this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\n\n        const self = this;\n        const matches = this.parseTemplateText();\n        const d = this.opts.delimiter;\n        const o = this.opts.openDelimiter;\n        const c = this.opts.closeDelimiter;\n\n        if (matches?.length) {\n            matches.forEach(function(line, index) {\n                let closing;\n                // If this is an opening tag, check for closing tags\n                // May end up with some false positives here\n                // Better to store modes as k/v with openDelimiter + delimiter as key\n                // Then this can simply check against the map\n                if (line.startsWith(o + d) // If it is a tag\n                    && !line.startsWith(o + d + d)) { // And is not escaped\n                    closing = matches[index + 2];\n                    if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\n                        throw new Error('Could not find matching close tag for \"' + line + '\".');\n                    }\n                }\n                self.scanLine(line);\n            });\n        }\n\n    },\n\n    parseTemplateText: function() {\n        let str = this.templateText;\n        const pat = this.regex;\n        let result = pat.exec(str);\n        const arr = [];\n        let firstPos;\n\n        while (result) {\n            firstPos = result.index;\n\n            if (firstPos !== 0) {\n                arr.push(str.substring(0, firstPos));\n                str = str.slice(firstPos);\n            }\n\n            arr.push(result[0]);\n            str = str.slice(result[0].length);\n            result = pat.exec(str);\n        }\n\n        if (str) {\n            arr.push(str);\n        }\n\n        return arr;\n    },\n\n    _addOutput: function(line) {\n        if (this.truncate) {\n            // Only replace single leading linebreak in the line after\n            // -%> tag -- this is the single, trailing linebreak\n            // after the tag that the truncation mode replaces\n            // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\n            // combo first in the regex-or\n            line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\n            this.truncate = false;\n        }\n        if (!line) {\n            return line;\n        }\n\n        // Preserve literal slashes\n        line = line.replace(/\\\\/g, '\\\\\\\\');\n\n        // Convert linebreaks\n        line = line.replace(/\\n/g, '\\\\n');\n        line = line.replace(/\\r/g, '\\\\r');\n\n        // Escape double-quotes\n        // - this will be the delimiter during execution\n        line = line.replace(/\"/g, '\\\\\"');\n        this.source += '    ; __append(\"' + line + '\")' + '\\n';\n        return undefined;\n    },\n\n    scanLine: function(line) {\n        const self = this;\n        const d = this.opts.delimiter;\n        const o = this.opts.openDelimiter;\n        const c = this.opts.closeDelimiter;\n        let newLineCount = 0;\n\n        newLineCount = (line.split('\\n').length - 1);\n\n        switch (line) {\n            case o + d:\n            case o + d + '_':\n                this.mode = Template.modes.EVAL;\n                break;\n            case o + d + '=':\n                this.mode = Template.modes.ESCAPED;\n                break;\n            case o + d + '-':\n                this.mode = Template.modes.RAW;\n                break;\n            case o + d + '#':\n                this.mode = Template.modes.COMMENT;\n                break;\n            case o + d + d:\n                this.mode = Template.modes.LITERAL;\n                this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\n                break;\n            case d + d + c:\n                this.mode = Template.modes.LITERAL;\n                this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\n                break;\n            case d + c:\n            case '-' + d + c:\n            case '_' + d + c:\n                if (this.mode == Template.modes.LITERAL) {\n                    this._addOutput(line);\n                }\n\n                this.mode = null;\n                this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\n                break;\n            default:\n                // In script mode, depends on type of tag\n                if (this.mode) {\n                    // If '//' is found without a line break, add a line break.\n                    switch (this.mode) {\n                        case Template.modes.EVAL:\n                        case Template.modes.ESCAPED:\n                        case Template.modes.RAW:\n                            if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\n                                line += '\\n';\n                            }\n                    }\n                    switch (this.mode) {\n                        // Just executing code\n                        case Template.modes.EVAL:\n                            this.source += '    ; ' + line + '\\n';\n                            break;\n                        // Exec, esc, and output\n                        case Template.modes.ESCAPED:\n                            this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\n                            break;\n                        // Exec and output\n                        case Template.modes.RAW:\n                            this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\n                            break;\n                        case Template.modes.COMMENT:\n                            // Do nothing\n                            break;\n                        // Literal <%% mode, append as raw output\n                        case Template.modes.LITERAL:\n                            this._addOutput(line);\n                            break;\n                    }\n                }\n                // In string mode, just add the output\n                else {\n                    this._addOutput(line);\n                }\n        }\n\n        if (self.opts.compileDebug && newLineCount) {\n            this.currentLine += newLineCount;\n            this.source += '    ; __line = ' + this.currentLine + '\\n';\n        }\n    }\n};\n\n/**\n * Escape characters reserved in XML.\n *\n * This is simply an export of {@link module:utils.escapeXML}.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @public\n * @func\n * */\nEJS.escapeXML = utils.escapeXML;\n\n/**\n * Version of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nEJS.VERSION = _VERSION_STRING;\n\n/**\n * Name for detection of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nEJS.name = _NAME;\n\nexport default EJS;\n"],"names":["utils","mod","regExpChars","hasOwnProperty","Object","prototype","hasOwn","obj","key","apply","escapeRegExpChars","string","String","replace","_ENCODE_HTML_RULES","_MATCH_HTML","encode_char","c","escapeXMLToString","Function","toString","call","this","escapeXML","markup","undefined","defineProperty","value","err","console","warn","shallowCopy","to","from","p","shallowCopyFromList","list","i","length","cache","_data","set","val","get","remove","reset","hyphenToCamel","str","match","toUpperCase","createNullProtoObjWherePossible","create","__proto__","hasOwnOnlyObject","o","EJS","path","scopeOptionWarned","_OPTS_PASSABLE_WITH_DATA","_JS_IDENTIFIER","handleCache","options","template","func","filename","hasTemplate","arguments","Error","compile","rethrow","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","optsParam","opts","templateText","mode","truncate","currentLine","source","client","escapeFunction","escape","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","root","includer","outputFunctionName","localsName","views","async","destructuredLocals","legacyInclude","_with","regex","createRegex","promiseImpl","Promise","templ","scope","render","d","data","clearCache","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","open","close","RegExp","src","fn","prepended","appended","escapeFn","Ctor","sanitizedFilename","JSON","stringify","generateSource","test","_opts$destructuredLoc","destructuring","name","log","e","SyntaxError","returnedFn","includeData","includerResult","includeFile","basename","extname","writable","enumerable","configurable","self","matches","parseTemplateText","forEach","index","closing","startsWith","scanLine","pat","result","exec","arr","firstPos","push","substring","_addOutput","newLineCount","indexOf","lastIndexOf","VERSION"],"mappings":"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"}