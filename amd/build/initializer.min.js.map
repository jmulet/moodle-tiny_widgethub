{"version":3,"file":"initializer.min.js","sources":["../src/initializer.js"],"sourcesContent":["import {getAddCustomElements, getAddValidElements, getAdditionalCss} from './options';\nimport * as cfg from 'core/config';\nimport jQuery from 'jquery';\n\n/**\n * @param {TinyMCE} editor\n */\nexport function initializer(editor) {\n    // Before setting the first content, we must extend the number of valid HTML tags\n    editor.once('BeforeSetContent', () => {\n        // Prevent the editor from removing certain tags\n        // Allow custom elements, e.g., script tag and SVG in the editor.\n        const validElem = getAddValidElements(editor);\n        editor.schema.addValidElements(validElem);\n        const addElem = getAddCustomElements(editor);\n        editor.schema.addCustomElements(addElem);\n    });\n    // To remove editor.once('SetContent', () => {});\n    // Add the bootstrap, CSS, etc... into the editor's iframe\n    editor.on('init', () => {\n        // On init editor.dom is ready\n        // Inject css all generated by Moodle into the editor's iframe\n        // http://localhost:4141/theme/styles.php/boost/1721728984_1/all\n        // TODO: Missing themesubrevision\n        const subversion = 1;\n        const allCss = `${cfg.wwwroot}/theme/styles.php/${cfg.theme}/${cfg.themerev}_${subversion}/all`;\n        editor.dom.loadCSS(allCss);\n\n        // Inject styles and Javascript into the editor's iframe\n        // editor.dom.loadCSS(`${baseUrl}/libs/fontawesome/css/font-awesome.min.css`);\n        // Discover the jQuery version\n        const jQueryVersion = jQuery.fn.jquery ?? '3.6.1';\n        const scriptJQ = editor.dom.create(\"script\", {src: `https://code.jquery.com/jquery-${jQueryVersion}.min.js`});\n        const head = editor.getDoc().querySelector(\"head\");\n        scriptJQ.onload = () => {\n            // Cannot load BS until JQ is fully loaded\n            const bsVersion = jQuery.fn.tooltip?.Constructor?.VERSION ?? '4.6.2';\n            const scriptBS = editor.dom.create(\"script\",\n                {src: `https://cdn.jsdelivr.net/npm/bootstrap@${bsVersion}/dist/js/bootstrap.bundle.min.js`});\n            head.appendChild(scriptBS);\n\n            // Activate popover and tooltips\n            scriptBS.onload = () => {\n                const scriptInitBS = editor.dom.create(\"script\");\n                scriptInitBS.innerHTML = `\n                $(document).ready(function() {\n                    $('body').tooltip({\n                        selector: '[data-toggle=\"tooltip\"]',\n                        trigger: 'hover'\n                    });\n                    $('body').popover({\n                        selector: '[data-toggle=\"popover\"]',\n                        trigger: 'hover'\n                    });\n                });`;\n                head.appendChild(scriptInitBS);\n            };\n            // Initialize contextmenu when editor is ready\n            // ContextMenu.getInstance(editor);\n\n            editor.ui.registry.addButton('edit1', {\n                icon: 'edit',\n                tooltip: 'Edit',\n                onAction: function() {\n                    alert('Edit');\n                }\n            });\n            editor.ui.registry.addButton('unpack1', {\n                icon: 'code-sample',\n                tooltip: 'Unpack',\n                onAction: function() {\n                    alert('Unpack');\n                }\n            });\n            editor.ui.registry.addContextToolbar('contexttb1', {\n                predicate: function(node) {\n                    return node.matches('div.alert');\n                },\n                items: 'edit1 | unpack1',\n                position: 'node'\n            });\n\n        };\n        head.appendChild(scriptJQ);\n        // Inject css from site Admin\n        const adminCss = getAdditionalCss(editor) || '';\n        if (adminCss.trim()) {\n            editor.dom.addStyle(adminCss);\n        }\n    });\n}"],"names":["editor","once","validElem","schema","addValidElements","addElem","addCustomElements","on","allCss","cfg","wwwroot","theme","themerev","dom","loadCSS","jQueryVersion","jQuery","fn","jquery","scriptJQ","create","src","head","getDoc","querySelector","onload","bsVersion","tooltip","_jQuery$fn$tooltip","Constructor","_jQuery$fn$tooltip$Co2","VERSION","scriptBS","appendChild","scriptInitBS","innerHTML","ui","registry","addButton","icon","onAction","alert","addContextToolbar","predicate","node","matches","items","position","adminCss","trim","addStyle"],"mappings":"6eAO4BA,QAExBA,OAAOC,KAAK,oBAAoB,WAGtBC,WAAY,gCAAoBF,QACtCA,OAAOG,OAAOC,iBAAiBF,iBACzBG,SAAU,iCAAqBL,QACrCA,OAAOG,OAAOG,kBAAkBD,YAIpCL,OAAOO,GAAG,QAAQ,iCAMRC,iBAAYC,IAAIC,qCAA4BD,IAAIE,kBAASF,IAAIG,qBADhD,UAEnBZ,OAAOa,IAAIC,QAAQN,cAKbO,wCAAgBC,gBAAOC,GAAGC,sDAAU,QACpCC,SAAWnB,OAAOa,IAAIO,OAAO,SAAU,CAACC,6CAAuCN,2BAC/EO,KAAOtB,OAAOuB,SAASC,cAAc,QAC3CL,SAASM,OAAS,+EAERC,mEAAYV,gBAAOC,GAAGU,sEAAVC,mBAAmBC,qDAAnBC,uBAAgCC,+DAAW,QACvDC,SAAWhC,OAAOa,IAAIO,OAAO,SAC/B,CAACC,qDAA+CK,gDACpDJ,KAAKW,YAAYD,UAGjBA,SAASP,OAAS,WACRS,aAAelC,OAAOa,IAAIO,OAAO,UACvCc,aAAaC,0aAWbb,KAAKW,YAAYC,eAKrBlC,OAAOoC,GAAGC,SAASC,UAAU,QAAS,CAClCC,KAAM,OACNZ,QAAS,OACTa,SAAU,WACNC,MAAM,WAGdzC,OAAOoC,GAAGC,SAASC,UAAU,UAAW,CACpCC,KAAM,cACNZ,QAAS,SACTa,SAAU,WACNC,MAAM,aAGdzC,OAAOoC,GAAGC,SAASK,kBAAkB,aAAc,CAC/CC,UAAW,SAASC,aACTA,KAAKC,QAAQ,cAExBC,MAAO,kBACPC,SAAU,UAIlBzB,KAAKW,YAAYd,gBAEX6B,UAAW,6BAAiBhD,SAAW,GACzCgD,SAASC,QACTjD,OAAOa,IAAIqC,SAASF"}