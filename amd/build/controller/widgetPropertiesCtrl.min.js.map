{"version":3,"file":"widgetPropertiesCtrl.min.js","sources":["../../src/controller/widgetPropertiesCtrl.js"],"sourcesContent":["/* eslint-disable no-console */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_widgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {createBinding} from '../util';\n\n/**\n * @typedef {JQuery<HTMLElement>} ModalDialogue\n * @property {JQuery<HTMLElement>} header\n * @property {JQuery<HTMLElement>} body\n * @property {JQuery<HTMLElement>} footer\n * @property {() => void} destroy\n * @property {() => void} show\n */\n\n/**\n * @class\n * @classdesc Defines a generic editor dialogue based on widget definition fields\n */\nexport default class WidgetPropertiesCtrl {\n    /** @type {import('../service/modalSrv').ModalDialogue | null} */\n    #modal = null;\n\n    /**\n     * @param {import('../plugin').TinyMCE} editor\n     * @param {import('../controller/formCtrl').FormCtrl} formCtrl\n     * @param {import('../service/modalSrv').ModalSrv} modalSrv\n     */\n    constructor(editor, formCtrl, modalSrv) {\n        /** @type {import('../plugin').TinyMCE} */\n        this.editor = editor;\n        /** @type {import('../controller/formCtrl').FormCtrl} */\n        this.formCtrl = formCtrl;\n        /** @type {import('../service/modalSrv').ModalSrv} */\n        this.modalSrv = modalSrv;\n    }\n\n    /**\n     * Displays a modal dialog for editing the currentContext\n     * based on contextual\n     * @param {import('../contextInit').PathResult} currentContext\n     * @returns\n     */\n    async show(currentContext) {\n        if (!currentContext.widget) {\n            console.error(\"Missing widget on currentContext\");\n            return;\n        }\n        const widget = currentContext.widget;\n        const hostId = this.editor.id;\n        const elem = currentContext.elem;\n\n        if (!elem || !widget?.hasBindings()) {\n            console.error(\"Invalid genericEditor widget definition \", widget);\n            return;\n        }\n\n        // Create bindings\n        /** @type {Object.<string, any>} */\n        const bindingsDOM = {};\n        // Extract param values from DOM\n        /** @type {Object.<string, any>} */\n        const paramValues = {};\n        widget.parameters.filter(param => param.bind != undefined).forEach((param) => {\n            if (!param.bind) {\n                return;\n            }\n            const binding = createBinding(param.bind, elem, typeof (param.value));\n            if (binding) {\n                bindingsDOM[param.name] = binding;\n                paramValues[param.name] = binding.getValue();\n            }\n        });\n\n        // Create parameters form controls\n        // Filter only those parameters which have default Values\n        /** @type {string[]} */\n        const controls = widget.parameters.filter(param => param.bind)\n            .map(param => this.formCtrl.createControlHTML(hostId, param, paramValues[param.name]));\n\n        const ctxData = {\n            name: widget.name,\n            controls: controls\n        };\n\n        // Create the modal\n        // @ts-ignore\n        this.#modal = await this.modalSrv.create('context', ctxData, () => {\n            this.#modal?.destroy();\n            this.#modal = null;\n        });\n        this.formCtrl.attachPickers(this.#modal.body);\n        // Applying watchers to the form elements\n        this.formCtrl.applyFieldWatchers(this.#modal.body, paramValues, widget, false);\n\n        // Bind accept action to modal\n        this.#modal.footer.find(\"button.btn-secondary\").on(\"click\", () => {\n            this.#modal?.destroy();\n        });\n        this.#modal.footer.find(\"button.btn-primary\").on(\"click\", () => {\n            const form = this.#modal?.body?.find(\"form\");\n            let updatedValues = paramValues;\n            if (form) {\n                updatedValues = this.formCtrl.extractFormParameters(widget, form);\n            }\n            this.#modal?.destroy();\n            // Apply Param Values To DOM\n            Object.keys(bindingsDOM).forEach(key => {\n                bindingsDOM[key].setValue(updatedValues[key]);\n            });\n        });\n        this.#modal.show();\n    }\n\n    close() {\n        this.#modal?.destroy();\n    }\n}\n"],"names":["constructor","editor","formCtrl","modalSrv","currentContext","widget","console","error","hostId","this","id","elem","hasBindings","bindingsDOM","paramValues","parameters","filter","param","undefined","bind","forEach","binding","value","name","getValue","controls","map","createControlHTML","ctxData","modal","create","destroy","attachPickers","body","applyFieldWatchers","footer","find","on","form","_this$modal3","_this$modal3$body","updatedValues","extractFormParameters","Object","keys","key","setValue","show","close"],"mappings":";;;;;;;;aAyCa,KAOTA,YAAYC,OAAQC,SAAUC,eAErBF,OAASA,YAETC,SAAWA,cAEXC,SAAWA,oBASTC,oBACFA,eAAeC,mBAChBC,QAAQC,MAAM,0CAGZF,OAASD,eAAeC,OACxBG,OAASC,KAAKR,OAAOS,GACrBC,KAAOP,eAAeO,SAEvBA,MAASN,MAAAA,SAAAA,OAAQO,0BAClBN,QAAQC,MAAM,2CAA4CF,cAMxDQ,YAAc,GAGdC,YAAc,GACpBT,OAAOU,WAAWC,QAAOC,OAAuBC,MAAdD,MAAME,OAAmBC,SAASH,YAC3DA,MAAME,kBAGLE,SAAU,uBAAcJ,MAAME,KAAMR,YAAcM,MAAMK,OAC1DD,UACAR,YAAYI,MAAMM,MAAQF,QAC1BP,YAAYG,MAAMM,MAAQF,QAAQG,qBAOpCC,SAAWpB,OAAOU,WAAWC,QAAOC,OAASA,MAAME,OACpDO,KAAIT,OAASR,KAAKP,SAASyB,kBAAkBnB,OAAQS,MAAOH,YAAYG,MAAMM,SAE7EK,QAAU,CACZL,KAAMlB,OAAOkB,KACbE,SAAUA,gBAKTI,YAAepB,KAAKN,SAAS2B,OAAO,UAAWF,SAAS,+CACpDC,0CAAQE,gBACRF,MAAS,aAEb3B,SAAS8B,cAAcvB,MAAKoB,MAAOI,WAEnC/B,SAASgC,mBAAmBzB,MAAKoB,MAAOI,KAAMnB,YAAaT,QAAQ,SAGnEwB,MAAOM,OAAOC,KAAK,wBAAwBC,GAAG,SAAS,iDACnDR,4CAAQE,mBAEZF,MAAOM,OAAOC,KAAK,sBAAsBC,GAAG,SAAS,2DAChDC,0BAAO7B,MAAKoB,yDAALU,aAAaN,yCAAbO,kBAAmBJ,KAAK,YACjCK,cAAgB3B,YAChBwB,OACAG,cAAgBhC,KAAKP,SAASwC,sBAAsBrC,OAAQiC,kCAE3DT,4CAAQE,UAEbY,OAAOC,KAAK/B,aAAaO,SAAQyB,MAC7BhC,YAAYgC,KAAKC,SAASL,cAAcI,kBAG3ChB,MAAOkB,OAGhBC,oDACSnB,4CAAQE"}